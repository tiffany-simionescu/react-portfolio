{"version":3,"sources":["images/avatar.jpg","utils/axiosWithAuth.js","components/LandingPage.js","components/forms/ContactForm.js","actions/reactProjectActions.js","components/project_cards/ReactProjectCard.js","components/containers/ReactProjectCardContainer.js","actions/reduxProjectActions.js","components/project_cards/ReduxProjectCard.js","components/containers/ReduxProjectCardContainer.js","actions/sqliteProjectActions.js","components/project_cards/SqliteProjectCard.js","components/containers/SqliteProjectCardContainer.js","actions/postgresqlProjectActions.js","components/project_cards/PostgresqlProjectCard.js","components/containers/PostgresqlProjectCardContainer.js","actions/pythonProjectActions.js","components/project_cards/PythonProjectCard.js","components/containers/PythonProjectCardContainer.js","components/Projects.js","components/resume/Education.js","components/resume/Experience.js","components/resume/Skills.js","components/resume/Resume.js","components/forms/LoginForm.js","actions/userActions.js","components/forms/RegisterForm.js","components/forms/ReactProjectForm.js","components/forms/ReduxProjectForm.js","components/forms/SqliteProjectForm.js","components/forms/PostgresqlProjectForm.js","components/forms/PythonProjectForm.js","components/Main.js","components/Nav.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/reactProjectReducers.js","reducers/reduxProjectReducers.js","reducers/sqliteProjectReducers.js","reducers/postgresqlProjectReducers.js","reducers/pythonProjectReducers.js","reducers/userReducers.js","index.js","sessionStorage.js","reducers/index.js","images/profile_pic.jpg"],"names":["module","exports","axiosWithAuth","token","localStorage","getItem","axios","create","baseURL","headers","LandingPage","style","width","margin","className","col","src","Avatar","alt","borderRadius","href","rel","target","aria-hidden","Component","ContactForm","props","handleSubmit","e","preventDefault","emailjs","state","then","res","console","log","status","text","alert","err","error","resetForm","handleChange","param","setState","value","message","name","email","this","marginRight","paddingTop","onSubmit","type","onChange","bind","placeholder","required","rows","cols","variant","fontSize","verticalAlign","fetchReactProject","react_project_id","dispatch","get","payload","data","catch","toast","connect","deleteReactProject","delete","window","location","reload","history","push","editReactProject","react_project","put","useState","react_project_image","react_project_title","react_project_description","react_project_github_link","react_project_live_link","reactProject","setReactProject","editMode","setEditMode","useEffect","onClick","shadow","minWidth","height","background","border","colored","padding","ReactProjectCardContainer","reactProjects","setReactProjects","length","map","key","fetchReduxProject","redux_project_id","deleteReduxProject","user_id","editReduxProject","redux_project","redux_project_image","redux_project_title","redux_project_description","redux_project_github_link","redux_project_live_link","reduxProject","setReduxProject","node_project_live_link","ReduxProjectCardContainer","reduxProjects","setReduxProjects","fetchSqliteProject","sqlite_project_id","deleteSqliteProject","editSqliteProject","sqlite_project","sqlite_project_image","sqlite_project_title","sqlite_project_description","sqlite_project_github_link","sqlite_project_live_link","sqliteProject","setSqliteProject","SqliteProjectCardContainer","sqliteProjects","setSqliteProjects","fetchPostgresqlProject","postgresql_project_id","deletePostgresqlProject","editPostgresqlProject","postgresql_project","postgresql_project_image","postgresql_project_title","postgresql_project_description","postgresql_project_github_link","postgresql_project_live_link","postgresqlProject","setPostgresqlProject","PostgresqlProjectCardContainer","postgresqlProjects","setPostgresqlProjects","fetchPythonProject","python_project_id","deletePythonProject","editPythonProject","python_project","python_project_image","python_project_title","python_project_description","python_project_github_link","python_project_live_link","pythonProject","setPythonProject","PythonProjectCardContainer","pythonProjects","setPythonProjects","Projects","activeTab","id","to","tabId","ripple","toggleCategories","Education","startYear","endYear","marginTop","schoolName","schoolDescription","Experience3","jobTitle","jobName","jobDescription1","jobDescription2","jobDescription3","Skills","display","skill","progress","Resume","color","Experience","loggedIn","isLoggedIn","login","user","post","setItem","authToken","username","password","setUser","registerUser","first_name","last_name","phone_number","addReactProject","boxShadow","addReduxProject","addSqliteProject","addPostgresqlProject","addPythonProject","Main","exact","path","component","LoginForm","RegisterForm","ReactProjectForm","ReduxProjectForm","SqliteProjectForm","PostgresqlProjectForm","PythonProjectForm","logout","clear","title","scroll","textDecoration","App","Boolean","hostname","match","initialState","users","displayedReactProjects","displayedReduxProjects","displayedSqliteProjects","displayedPostgresqlProjects","displayedPythonProjects","isFetching","isSubmitting","isDeleting","reactProjectReducer","action","isEditing","reduxProjectReducer","sqliteProjectReducer","postgresqlProjectReducer","pythonProjectReducer","userReducer","composeEnhancers","serializedState","sessionStorage","JSON","parse","loadState","_REDUX_DEVTOOLS_EXTENSION_COMPOSE","compose","createHashHistory","hashType","getUserConfirmation","callback","confirm","ReactDOM","render","store","preloadedState","createStore","combineReducers","router","ConnectedRouter","applyMiddleware","routerMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed1bddc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.3ab3f4f7.jpg\";","import axios from \"axios\";\r\n\r\nexport const axiosWithAuth = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return axios.create({\r\n    baseURL: \"https://tiffany-simionescu-portfolio.herokuapp.com\",\r\n    // baseURL: \"http://127.0.0.1:5050\",\r\n    headers: {\r\n      token: token\r\n    }\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport Avatar from '../images/profile_pic.jpg';\r\n\r\n// React Mdl\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: '100%', margin: 'auto' }}>\r\n        <Grid className=\"landing-grid\">\r\n          <Cell col={12}>\r\n            <img \r\n              className=\"avatar-image\"\r\n              src={Avatar}\r\n              alt=\"avatar\"\r\n              style={{ borderRadius: '50%'}}\r\n            />\r\n\r\n            <div className=\"banner-text\">\r\n              <h1>Full Stack Web Developer</h1>\r\n\r\n              <hr />\r\n\r\n              <p>HTML/CSS | JavaScript | KnexJS | React | Redux | NodeJS | Express | SQLite | PostgreSQL | Python</p>\r\n\r\n              <div className=\"social-links\">\r\n\r\n                {/* LinkedIn */}\r\n                <a href=\"https://www.linkedin.com/in/tiffanysimionescu/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                </a>\r\n\r\n                {/* Github */}\r\n                <a href=\"https://github.com/tiffany-simionescu\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                </a>\r\n\r\n                {/* Facebook */}\r\n                <a href=\"https://www.facebook.com/Tiffany-Simionescu-Full-Stack-Web-Developer-337217927229001\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\r\n                </a>\r\n\r\n                {/* Twitter */}\r\n                {/* <a href=\"https://twitter.com/tsimionescu87\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <i className=\"fa fa-twitter-square\" aria-hidden=\"true\" />\r\n                </a> */}\r\n\r\n              </div>\r\n            </div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\nimport * as emailjs from 'emailjs-com';\r\n\r\n// React Mdl\r\nimport { Grid, Cell, List, ListItem, ListItemContent } from 'react-mdl';\r\n\r\nclass ContactForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      name: '',\r\n      email: ''\r\n    };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    emailjs.send('gmail','template_dWaijdid', this.state, 'user_IlZyzJhy7n0poMp73csQD')\r\n    .then(res => {\r\n       console.log('SUCCESS!', res.status, res.text);\r\n       alert(\"Email sent successfully!\")\r\n    }, (err) => {\r\n       console.error('FAILED...', err);\r\n       alert(\"Failed to send. Please try again.\")\r\n    });\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      message: '',\r\n    })\r\n  }\r\n\r\n  handleChange = (param, e) => {\r\n    this.setState({\r\n      [param]: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contact-body\">\r\n        <h2>Contact Me</h2>\r\n        {/* <hr /> */}\r\n        <Grid className=\"contact-grid\">\r\n          <Cell col={6} style={{ width: \"500px\", marginRight: \"30px\"}}>\r\n            {/* <h2>Contact Me</h2> */}\r\n            {/* <hr /> */}\r\n            <p style={{ width: '90%', margin: '20px auto', paddingTop: '1em' }}>\r\n              If you have any questions or comments, please fill out the form below.\r\n              I would love to hear from you. Thank you, and have a wonderful day!\r\n            </p>\r\n\r\n            <div className=\"email-form\">\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                  {/* <label>Name:</label> */}\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={this.handleChange.bind(this, 'name')}\r\n                    placeholder=\"Name\"\r\n                    required\r\n                    value={this.state.name}  \r\n                  />\r\n                </div>\r\n                <div>\r\n                  {/* <label>Email:</label> */}\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={this.handleChange.bind(this, 'email')}\r\n                    placeholder=\"Email Address\"\r\n                    required\r\n                    value={this.state.email}  \r\n                  />\r\n                </div>\r\n                <div>\r\n                  {/* <label>Message:</label> */}\r\n                  <textarea \r\n                    rows=\"5\"\r\n                    cols=\"40\"\r\n                    name=\"message\"\r\n                    onChange={this.handleChange.bind(this, 'message')}\r\n                    placeholder=\"Message...\"\r\n                    required\r\n                    value={this.state.message}\r\n                  />\r\n                </div>\r\n                <button variant=\"primary\" type=\"submit\">\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n          </Cell>\r\n           <Cell col={6}>\r\n            {/* <h2>Tiffany Simionescu</h2> */}\r\n            {/* <hr /> */}\r\n\r\n            <div className=\"contact-list\">\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemContent style={{ fontSize: '16px', verticalAlign: \"middle\" }}>\r\n                    <i className=\"fa fa-phone-square\" aria-hidden=\"true\" style={{ fontSize: \"40px\" }} />\r\n                    (854) 283-5263\r\n                  </ListItemContent>\r\n                </ListItem>\r\n\r\n                <ListItem>\r\n                  <ListItemContent style={{ fontSize: '16px' }}>\r\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\" style={{ fontSize: \"40px\" }} />\r\n                    tiffany.simionescu@gmail.com\r\n                  </ListItemContent>\r\n                </ListItem>\r\n\r\n                <ListItem>\r\n                  <ListItemContent style={{ fontSize: '16px' }}>\r\n                    <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" style={{ fontSize: \"40px\" }} />\r\n                    /in/tiffanysimionescu/\r\n                  </ListItemContent>\r\n                </ListItem>\r\n\r\n                <ListItem>\r\n                  <ListItemContent style={{ fontSize: '16px' }}>\r\n                    <i className=\"fa fa-github-square\" aria-hidden=\"true\" style={{ fontSize: \"40px\" }} />\r\n                    tiffany-simionescu\r\n                  </ListItemContent>\r\n                </ListItem>\r\n\r\n                <ListItem>\r\n                  <ListItemContent style={{ fontSize: '16px' }}>\r\n                    <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" style={{ fontSize: \"40px\" }} />\r\n                    <a href=\"https://www.facebook.com/Tiffany-Simionescu-Full-Stack-Web-Developer-337217927229001\"\r\n                      target=\"_blank\">\r\n                      Facebook Page\r\n                    </a>\r\n                  </ListItemContent>\r\n                </ListItem>\r\n\r\n                {/* <ListItem>\r\n                  <ListItemContent style={{ fontSize: '16px' }}>\r\n                    <i className=\"fa fa-twitter-square\" aria-hidden=\"true\" style={{ fontSize: \"40px\" }} />\r\n                    tsimionescu87\r\n                  </ListItemContent>\r\n                </ListItem> */}\r\n              </List>\r\n            </div>\r\n\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import { axiosWithAuth } from '../utils/axiosWithAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\n// == General Project Actions == //\r\nexport const FETCH_INITIALIZE = \"FETCH_INITIALIZE\";\r\nexport const POST_INITIALIZE = \"POST_INITIALIZE\";\r\nexport const DELETE_INITIALIZE = \"DELETE_INITIALIZE\";\r\n\r\n// == React Project Actions == //\r\nexport const FETCH_REACT_PROJECT_SUCCESS = \"FETCH_REACT_PROJECT_SUCCESS\";\r\nexport const FETCH_REACT_PROJECT_FAILURE = \"FETCH_REACT_PROJECT_FAILURE\";\r\nexport const ADD_REACT_PROJECT_SUCCESS = \"ADD_REACT_PROJECT_SUCCESS\";\r\nexport const ADD_REACT_PROJECT_FAILURE = \"ADD_REACT_PROJECT_FAILURE\";\r\nexport const EDIT_REACT_PROJECT_SUCCESS = \"EDIT_REACT_PROJECT_SUCCESS\";\r\nexport const EDIT_REACT_PROJECT_FAILURE = \"EDIT_REACT_PROJECT_FAILURE\";\r\nexport const DELETE_REACT_PROJECT_SUCCESS = \"DELETE_REACT_PROJECT_SUCCESS\";\r\nexport const DELETE_REACT_PROJECT_FAILURE = \"DELETE_REACT_PROJECT_FAILURE\";\r\n\r\n// == React Projects Actions == //\r\nexport const FETCH_REACT_PROJECTS_SUCCESS = \"FETCH_REACT_PROJECTS_SUCCESS\";\r\nexport const FETCH_REACT_PROJECTS_FAILURE = \"FETCH_REACT_PROJECTS_FAILURE\";\r\n\r\n\r\n// == React Projects Functions == //\r\nexport const fetchReactProjects = () => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get('/api/reactprojects')\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_REACT_PROJECTS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_REACT_PROJECTS_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n\r\n// == React Project Functions == //\r\nexport const fetchReactProject = react_project_id => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get(`/api/reactprojects/${react_project_id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_REACT_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_REACT_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n// export const addReactProject = react_project => dispatch => {\r\n//   dispatch({ type: POST_INITIALIZE })\r\n\r\n//   axiosWithAuth()\r\n//     .post('/api/reactprojects', react_project)\r\n//     .then(res => {\r\n//       dispatch({\r\n//         type: ADD_REACT_PROJECT_SUCCESS,\r\n//         payload: res.data\r\n//       });\r\n//     })\r\n//     .catch(err => {\r\n//       dispatch({\r\n//         type: ADD_REACT_PROJECT_FAILURE,\r\n//         payload: { err, message: err.message }\r\n//       });\r\n//     });\r\n// };\r\nexport const addReactProject = (react_project, props) => dispatch => {\r\n  dispatch({ type: POST_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .post('/api/reactprojects', react_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_REACT_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      props.history.push(\"/projects\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ADD_REACT_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const editReactProject = (react_project_id, react_project) => dispatch => {\r\n  axiosWithAuth()\r\n    .put(`/api/reactprojects/${react_project_id}`, react_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: EDIT_REACT_PROJECT_SUCCESS\r\n      });\r\n      fetchReactProject(react_project_id)\r\n      console.log(\"editReactProject Success\", res);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: EDIT_REACT_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const deleteReactProject = (react_project_id, props) => dispatch => {\r\n  dispatch({ type: DELETE_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .delete(`/api/reactprojects/${react_project_id}`)\r\n    .then(() => {\r\n      dispatch({\r\n        type: DELETE_REACT_PROJECT_SUCCESS\r\n      });\r\n      window.location.reload();\r\n      fetchReactProjects();\r\n      props.history.push('/api/projects');\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_REACT_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../App.css';\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  CardActions,\r\n  Button\r\n} from 'react-mdl';\r\nimport { \r\n  deleteReactProject, \r\n  editReactProject, \r\n  fetchReactProject \r\n} from '../../actions/reactProjectActions';\r\n\r\nfunction ReactProjectCard(props) {\r\n\r\n  const [reactProject, setReactProject] = useState({\r\n    react_project_image: \"\",\r\n    react_project_title: \"\",\r\n    react_project_description: \"\",\r\n    react_project_github_link: \"\",\r\n    react_project_live_link: \"\"\r\n  })\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.fetchReactProject(props.react_project_id);\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setReactProject({\r\n      ...reactProject,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    props.editReactProject(props.react_project_id, reactProject);\r\n    setEditMode(false);\r\n    props.fetchReactProject(props.react_project_id);\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const triggerEditConfirmation = e => {\r\n    e.preventDefault();\r\n    setEditMode(true);\r\n    setReactProject({\r\n      ...reactProject,\r\n      react_project_image: props.react_project_image,\r\n      react_project_title: props.react_project_title,\r\n      react_project_description: props.react_project_description,\r\n      react_project_github_link: props.react_project_github_link,\r\n      react_project_live_link: props.react_project_live_link\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-card\">\r\n        {editMode ? (\r\n          <div className=\"project-box\">\r\n            <h1>Edit Project</h1>\r\n            <form>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"react_project_image\"\r\n                  value={reactProject.react_project_image}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Image URL:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"react_project_title\"\r\n                  value={reactProject.react_project_title}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Title:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"react_project_description\"\r\n                  value={reactProject.react_project_description}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Description:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"react_project_github_link\"\r\n                  value={reactProject.react_project_github_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Github Link:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"react_project_live_link\"\r\n                  value={reactProject.react_project_live_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Live Link:</label>\r\n              </div>\r\n              <button onClick={handleEdit}>Commit Changes</button>\r\n              <button onClick={() => setEditMode(false)}>Cancel</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <Card shadow={5} style={{ minWidth: '450', margin: 'auto', borderRadius: '10px' }}>\r\n            <CardTitle style={{ height: '176px', background: `url(${props.react_project_image}) center / cover` }}>\r\n                <span className=\"project-title\">\r\n                  {props.react_project_title}\r\n                </span>\r\n              </CardTitle>  \r\n              <CardText className=\"project-card-description\">\r\n                {props.react_project_description}\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\", padding: \"0\" }}\r\n                  href={props.react_project_github_link} \r\n                  target=\"_blank\">\r\n                    Github\r\n                </Button>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\" }}\r\n                  href={props.react_project_live_link} \r\n                  target=\"_blank\">\r\n                    LiveDemo\r\n                </Button>\r\n                {localStorage.getItem(\"token\") ? (\r\n                  <>\r\n                    <Button \r\n                      colored\r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={triggerEditConfirmation}\r\n                      target=\"_blank\">\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                      colored \r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={() => props.deleteReactProject(props.react_project_id, props)}>\r\n                      Delete\r\n                    </Button>\r\n                </>\r\n                ) : (\r\n                  <span /> \r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n        )}\r\n            \r\n    </div>\r\n  )\r\n} \r\n\r\nexport default connect(null, \r\n  { deleteReactProject, fetchReactProject, editReactProject })\r\n  (ReactProjectCard);","import React, { useEffect, useState } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { fetchReactProjects } from '../../actions/reactProjectActions';\r\nimport ReactProjectCard from '../project_cards/ReactProjectCard';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\nimport '../../App.css';\r\n\r\nconst ReactProjectCardContainer = props => {\r\n\r\n  const [reactProjects, setReactProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // props.fetchReactProjects(props.react_project_id);\r\n    axiosWithAuth()\r\n      .get('/api/reactprojects')\r\n      .then(res => {\r\n        setReactProjects(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"project-card-container\">\r\n      {/* {props.react_projects &&\r\n        props.react_projects.map((react_project) => {\r\n          return (\r\n            // <ReactProjectCard key={index} react_project={react_project} />\r\n            <ReactProjectCard {...react_project} key={react_project.react_project_id} />\r\n          )\r\n        })} */}\r\n        {reactProjects.length > 0 ?\r\n          (reactProjects.map(react_project => {\r\n            return (\r\n                <ReactProjectCard {...react_project} key={react_project.react_project_id} />\r\n            )\r\n          })) : (\r\n            <h4>Loading...</h4>\r\n          )\r\n        }\r\n    </div>\r\n  )\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     react_projects: state.displayedReactProjects,\r\n//     isFetching: state.isFetching\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps, \r\n//   { fetchReactProjects })(ReactProjectCardContainer);\r\n\r\nexport default ReactProjectCardContainer;","import { axiosWithAuth } from '../utils/axiosWithAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\n// == General Project Actions == //\r\nexport const FETCH_INITIALIZE = \"FETCH_INITIALIZE\";\r\nexport const POST_INITIALIZE = \"POST_INITIALIZE\";\r\nexport const DELETE_INITIALIZE = \"DELETE_INITIALIZE\";\r\n\r\n// == Redux Project Actions == //\r\nexport const FETCH_REDUX_PROJECT_SUCCESS = \"FETCH_REDUX_PROJECT_SUCCESS\";\r\nexport const FETCH_REDUX_PROJECT_FAILURE = \"FETCH_REDUX_PROJECT_FAILURE\";\r\nexport const ADD_REDUX_PROJECT_SUCCESS = \"ADD_REDUX_PROJECT_SUCCESS\";\r\nexport const ADD_REDUX_PROJECT_FAILURE = \"ADD_REDUX_PROJECT_FAILURE\";\r\nexport const EDIT_REDUX_PROJECT_SUCCESS = \"EDIT_REDUX_PROJECT_SUCCESS\";\r\nexport const EDIT_REDUX_PROJECT_FAILURE = \"EDIT_REDUX_PROJECT_FAILURE\";\r\nexport const DELETE_REDUX_PROJECT_SUCCESS = \"DELETE_REDUX_PROJECT_SUCCESS\";\r\nexport const DELETE_REDUX_PROJECT_FAILURE = \"DELETE_REDUX_PROJECT_FAILURE\";\r\n\r\n// == Redux Projects Actions == //\r\nexport const FETCH_REDUX_PROJECTS_SUCCESS = \"FETCH_REDUX_PROJECTS_SUCCESS\";\r\nexport const FETCH_REDUX_PROJECTS_FAILURE = \"FETCH_REDUX_PROJECTS_FAILURE\";\r\n\r\n\r\n// == Redux Projects Functions == //\r\nexport const fetchReduxProjects = () => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get('/api/reduxprojects')\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_REDUX_PROJECTS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_REDUX_PROJECTS_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n\r\n// == Redux Project Functions == //\r\nexport const fetchReduxProject = redux_project_id => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get(`/api/reduxprojects/${redux_project_id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_REDUX_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_REDUX_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n// export const addReduxProject = redux_project => dispatch => {\r\n//   dispatch({ type: POST_INITIALIZE })\r\n\r\n//   axiosWithAuth()\r\n//     .post('/api/reduxprojects', redux_project)\r\n//     .then(res => {\r\n//       dispatch({\r\n//         type: ADD_REDUX_PROJECT_SUCCESS,\r\n//         payload: res.data\r\n//       });\r\n//     })\r\n//     .catch(err => {\r\n//       dispatch({\r\n//         type: ADD_REDUX_PROJECT_FAILURE,\r\n//         payload: { err, message: err.message }\r\n//       });\r\n//     });\r\n// };\r\n\r\nexport const addReduxProject = (redux_project, props) => dispatch => {\r\n  dispatch({ type: POST_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .post('/api/reduxprojects', redux_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_REDUX_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      props.history.push(\"/projects\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ADD_REDUX_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const editReduxProject = (redux_project_id, redux_project) => dispatch => {\r\n  axiosWithAuth()\r\n    .put(`/api/reduxprojects/${redux_project_id}`, redux_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: EDIT_REDUX_PROJECT_SUCCESS\r\n      });\r\n      fetchReduxProject(redux_project_id)\r\n      console.log(\"editReduxProject Success\", res);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: EDIT_REDUX_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const deleteReduxProject = (redux_project_id, user_id, props) => dispatch => {\r\n  dispatch({ type: DELETE_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .delete(`/api/reduxprojects/${redux_project_id}`)\r\n    .then(() => {\r\n      dispatch({\r\n        type: DELETE_REDUX_PROJECT_SUCCESS\r\n      });\r\n      window.location.reload();\r\n      fetchReduxProjects(user_id);\r\n      props.history.push(`/api/reduxprojects`);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_REDUX_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../App.css';\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  CardActions,\r\n  Button\r\n} from 'react-mdl';\r\nimport { \r\n  deleteReduxProject, \r\n  editReduxProject, \r\n  fetchReduxProject \r\n} from '../../actions/reduxProjectActions';\r\n\r\nfunction ReduxProjectCard(props) {\r\n\r\n  const [reduxProject, setReduxProject] = useState({\r\n    redux_project_image: \"\",\r\n    redux_project_title: \"\",\r\n    redux_project_description: \"\",\r\n    redux_project_github_link: \"\",\r\n    redux_project_live_link: \"\"\r\n  })\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.fetchReduxProject(props.redux_project_id);\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setReduxProject({\r\n      ...reduxProject,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    props.editReduxProject(props.redux_project_id, reduxProject);\r\n    setEditMode(false);\r\n    props.fetchReduxProject(props.redux_project_id);\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const triggerEditConfirmation = e => {\r\n    e.preventDefault();\r\n    setEditMode(true);\r\n    setReduxProject({\r\n      ...reduxProject,\r\n      redux_project_image: props.redux_project_image,\r\n      redux_project_title: props.redux_project_title,\r\n      redux_project_description: props.redux_project_description,\r\n      redux_project_github_link: props.redux_project_github_link,\r\n      redux_project_live_link: props.redux_project_live_link\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-card\">\r\n        {editMode ? (\r\n          <div className=\"project-box\">\r\n            <h1>Edit Project</h1>\r\n            <form>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"redux_project_image\"\r\n                  value={reduxProject.redux_project_image}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Image URL:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"redux_project_title\"\r\n                  value={reduxProject.redux_project_title}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Title:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"redux_project_description\"\r\n                  value={reduxProject.redux_project_description}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Description:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"redux_project_github_link\"\r\n                  value={reduxProject.redux_project_github_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Github Link:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"redux_project_live_link\"\r\n                  value={reduxProject.node_project_live_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Live Link:</label>\r\n              </div>\r\n              <button onClick={handleEdit}>Commit Changes</button>\r\n              <button onClick={() => setEditMode(false)}>Cancel</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <Card shadow={5} style={{ minWidth: '450', margin: 'auto', borderRadius: '10px' }}>\r\n            <CardTitle style={{ height: '176px', background: `url(${props.redux_project_image}) center / cover` }}>\r\n                <span className=\"project-title\">\r\n                  {props.redux_project_title}\r\n                </span>\r\n              </CardTitle>  \r\n              <CardText className=\"project-card-description\">\r\n                {props.redux_project_description}\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\", padding: \"0\" }}\r\n                  href={props.redux_project_github_link} \r\n                  target=\"_blank\">\r\n                    Github\r\n                </Button>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\" }}\r\n                  href={props.redux_project_live_link} \r\n                  target=\"_blank\">\r\n                    LiveDemo\r\n                </Button>\r\n                {localStorage.getItem(\"token\") ? (\r\n                  <>\r\n                    <Button \r\n                      colored\r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={triggerEditConfirmation}\r\n                      target=\"_blank\">\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                      colored \r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={() => props.deleteReduxProject(props.redux_project_id, props)}>\r\n                      Delete\r\n                    </Button>\r\n                </>\r\n                ) : (\r\n                  <span /> \r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n        )}\r\n            \r\n    </div>\r\n  )\r\n} \r\n\r\nexport default connect(null, \r\n  { deleteReduxProject, fetchReduxProject, editReduxProject })\r\n  (ReduxProjectCard);","import React, { useEffect, useState } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { fetchReduxProjects } from '../../actions/reduxProjectActions';\r\nimport ReduxProjectCard from '../project_cards/ReduxProjectCard';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\nimport '../../App.css';\r\n\r\nconst ReduxProjectCardContainer = props => {\r\n\r\n  const [reduxProjects, setReduxProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // props.fetchReduxProjects(props.redux_project_id);\r\n    axiosWithAuth()\r\n      .get('/api/reduxprojects')\r\n      .then(res => {\r\n        setReduxProjects(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"project-card-container\">\r\n      {/* {props.redux_projects &&\r\n        props.redux_projects.map((redux_project, index) => {\r\n          return (\r\n            <ReduxProjectCard key={index} redux_project={redux_project} />\r\n          )\r\n        })} */}\r\n        {reduxProjects.length > 0 ?\r\n          (reduxProjects.map(redux_project => {\r\n            return (\r\n                <ReduxProjectCard {...redux_project} key={redux_project.redux_project_id} />\r\n            )\r\n          })) : (\r\n            <h4>Loading...</h4>\r\n          )\r\n        }\r\n    </div>\r\n  )\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     redux_projects: state.displayedReduxProjects,\r\n//     isFetching: state.isFetching\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps, \r\n//   { fetchReduxProjects })(ReduxProjectCardContainer);\r\n\r\nexport default ReduxProjectCardContainer;","import { axiosWithAuth } from '../utils/axiosWithAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\n// == General Project Actions == //\r\nexport const FETCH_INITIALIZE = \"FETCH_INITIALIZE\";\r\nexport const POST_INITIALIZE = \"POST_INITIALIZE\";\r\nexport const DELETE_INITIALIZE = \"DELETE_INITIALIZE\";\r\n\r\n// == Sqlite Project Actions == //\r\nexport const FETCH_SQLITE_PROJECT_SUCCESS = \"FETCH_SQLITE_PROJECT_SUCCESS\";\r\nexport const FETCH_SQLITE_PROJECT_FAILURE = \"FETCH_SQLITE_PROJECT_FAILURE\";\r\nexport const ADD_SQLITE_PROJECT_SUCCESS = \"ADD_SQLITE_PROJECT_SUCCESS\";\r\nexport const ADD_SQLITE_PROJECT_FAILURE = \"ADD_SQLITE_PROJECT_FAILURE\";\r\nexport const EDIT_SQLITE_PROJECT_SUCCESS = \"EDIT_SQLITE_PROJECT_SUCCESS\";\r\nexport const EDIT_SQLITE_PROJECT_FAILURE = \"EDIT_SQLITE_PROJECT_FAILURE\";\r\nexport const DELETE_SQLITE_PROJECT_SUCCESS = \"DELETE_SQLITE_PROJECT_SUCCESS\";\r\nexport const DELETE_SQLITE_PROJECT_FAILURE = \"DELETE_SQLITE_PROJECT_FAILURE\";\r\n\r\n// == Sqlite Projects Actions == //\r\nexport const FETCH_SQLITE_PROJECTS_SUCCESS = \"FETCH_SQLITE_PROJECTS_SUCCESS\";\r\nexport const FETCH_SQLITE_PROJECTS_FAILURE = \"FETCH_SQLITE_PROJECTS_FAILURE\";\r\n\r\n\r\n// == Sqlite Projects Functions == //\r\nexport const fetchSqliteProjects = () => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get(`/api/sqliteprojects`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_SQLITE_PROJECTS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_SQLITE_PROJECTS_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n\r\n// == Sqlite Project Functions == //\r\nexport const fetchSqliteProject = sqlite_project_id => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get(`/api/sqliteprojects/${sqlite_project_id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_SQLITE_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_SQLITE_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n// export const addSqliteProject = sqlite_project => dispatch => {\r\n//   dispatch({ type: POST_INITIALIZE })\r\n\r\n//   axiosWithAuth()\r\n//     .post(`/api/sqliteprojects`, sqlite_project)\r\n//     .then(res => {\r\n//       dispatch({\r\n//         type: ADD_SQLITE_PROJECT_SUCCESS,\r\n//         payload: res.data\r\n//       });\r\n//     })\r\n//     .catch(err => {\r\n//       dispatch({\r\n//         type: ADD_SQLITE_PROJECT_FAILURE,\r\n//         payload: { err, message: err.message }\r\n//       });\r\n//     });\r\n// };\r\n\r\nexport const addSqliteProject = (sqlite_project, props) => dispatch => {\r\n  dispatch({ type: POST_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .post('/api/sqliteprojects', sqlite_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_SQLITE_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      props.history.push(\"/projects\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ADD_SQLITE_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const editSqliteProject = (sqlite_project_id, sqlite_project) => dispatch => {\r\n  axiosWithAuth()\r\n    .put(`/api/sqliteprojects/${sqlite_project_id}`, sqlite_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: EDIT_SQLITE_PROJECT_SUCCESS\r\n      });\r\n      window.location.reload();\r\n      fetchSqliteProject(sqlite_project_id)\r\n      console.log(\"editSqliteProject Success\", res);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: EDIT_SQLITE_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const deleteSqliteProject = (sqlite_project_id, user_id, props) => dispatch => {\r\n  dispatch({ type: DELETE_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .delete(`/api/sqliteprojects/${sqlite_project_id}`)\r\n    .then(() => {\r\n      dispatch({\r\n        type: DELETE_SQLITE_PROJECT_SUCCESS\r\n      });\r\n      fetchSqliteProjects(user_id);\r\n      props.history.push(`/api/sqliteprojects`);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_SQLITE_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../App.css';\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  CardActions,\r\n  Button\r\n} from 'react-mdl';\r\nimport { \r\n  deleteSqliteProject, \r\n  editSqliteProject, \r\n  fetchSqliteProject \r\n} from '../../actions/sqliteProjectActions';\r\n\r\nfunction SqliteProjectCard(props) {\r\n\r\n  const [sqliteProject, setSqliteProject] = useState({\r\n    sqlite_project_image: \"\",\r\n    sqlite_project_title: \"\",\r\n    sqlite_project_description: \"\",\r\n    sqlite_project_github_link: \"\",\r\n    sqlite_project_live_link: \"\"\r\n  })\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.fetchSqliteProject(props.sqlite_project_id);\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setSqliteProject({\r\n      ...sqliteProject,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    props.editSqliteProject(props.sqlite_project_id, sqliteProject);\r\n    setEditMode(false);\r\n    props.fetchSqliteProject(props.sqlite_project_id);\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const triggerEditConfirmation = e => {\r\n    e.preventDefault();\r\n    setEditMode(true);\r\n    setSqliteProject({\r\n      ...sqliteProject,\r\n      sqlite_project_image: props.sqlite_project_image,\r\n      sqlite_project_title: props.sqlite_project_title,\r\n      sqlite_project_description: props.sqlite_project_description,\r\n      sqlite_project_github_link: props.sqlite_project_github_link,\r\n      sqlite_project_live_link: props.sqlite_project_live_link\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-card\">\r\n        {editMode ? (\r\n          <div className=\"project-box\">\r\n            <h1>Edit Project</h1>\r\n            <form>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"sqlite_project_image\"\r\n                  value={sqliteProject.sqlite_project_image}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Image URL:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"sqlite_project_title\"\r\n                  value={sqliteProject.sqlite_project_title}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Title:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"sqlite_project_description\"\r\n                  value={sqliteProject.sqlite_project_description}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Description:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"sqlite_project_github_link\"\r\n                  value={sqliteProject.sqlite_project_github_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Github Link:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"sqlite_project_live_link\"\r\n                  value={sqliteProject.sqlite_project_live_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Live Link:</label>\r\n              </div>\r\n              <button onClick={handleEdit}>Commit Changes</button>\r\n              <button onClick={() => setEditMode(false)}>Cancel</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <Card shadow={5} style={{ minWidth: '450', margin: 'auto', borderRadius: '10px' }}>\r\n            <CardTitle style={{ height: '176px', background: `url(${props.sqlite_project_image}) center / cover` }}>\r\n                <span className=\"project-title\">\r\n                  {props.sqlite_project_title}\r\n                </span>\r\n              </CardTitle>  \r\n              <CardText className=\"project-card-description\">\r\n                {props.sqlite_project_description}\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\", padding: \"0\" }}\r\n                  href={props.sqlite_project_github_link} \r\n                  target=\"_blank\">\r\n                    Github\r\n                </Button>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\" }}\r\n                  href={props.sqlite_project_live_link} \r\n                  target=\"_blank\">\r\n                    LiveDemo\r\n                </Button>\r\n                {localStorage.getItem(\"token\") ? (\r\n                  <>\r\n                    <Button \r\n                      colored\r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={triggerEditConfirmation}\r\n                      target=\"_blank\">\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                      colored \r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={() => props.deleteReduxProject(props.sqlite_project_id, props)}>\r\n                      Delete\r\n                    </Button>\r\n                </>\r\n                ) : (\r\n                  <span /> \r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n        )}\r\n            \r\n    </div>\r\n  )\r\n} \r\n\r\nexport default connect(null, \r\n  { deleteSqliteProject, fetchSqliteProject, editSqliteProject })\r\n  (SqliteProjectCard);","import React, { useEffect, useState } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { fetchSqliteProjects } from '../../actions/sqliteProjectActions';\r\nimport SqliteProjectCard from '../project_cards/SqliteProjectCard';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\nimport '../../App.css';\r\n\r\nconst SqliteProjectCardContainer = props => {\r\n\r\n  const [sqliteProjects, setSqliteProjects] = useState([]);\r\n   \r\n  useEffect(() => {\r\n    // props.fetchSqliteProjects(props.sqlite_project_id);\r\n    axiosWithAuth()\r\n      .get('/api/sqliteprojects')\r\n      .then(res => {\r\n        setSqliteProjects(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"project-card-container\">\r\n        {sqliteProjects.length > 0 ?\r\n          (sqliteProjects.map(sqlite_project => {\r\n            return (\r\n                <SqliteProjectCard {...sqlite_project} key={sqlite_project.sqlite_project_id} />\r\n            )\r\n          })) : (\r\n            <h4>Loading...</h4>\r\n          )\r\n        }\r\n    </div>\r\n  )\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     sqlite_projects: state.displayedSqliteProjects,\r\n//     isFetching: state.isFetching\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps, \r\n//   { fetchSqliteProjects })(SqliteProjectCardContainer);\r\n\r\nexport default SqliteProjectCardContainer;","import { axiosWithAuth } from '../utils/axiosWithAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\n// == General Project Actions == //\r\nexport const FETCH_INITIALIZE = \"FETCH_INITIALIZE\";\r\nexport const POST_INITIALIZE = \"POST_INITIALIZE\";\r\nexport const DELETE_INITIALIZE = \"DELETE_INITIALIZE\";\r\n\r\n// == PostgreSQL Project Actions == //\r\nexport const FETCH_POSTGRESQL_PROJECT_SUCCESS = \"FETCH_POSTGRESQL_PROJECT_SUCCESS\";\r\nexport const FETCH_POSTGRESQL_PROJECT_FAILURE = \"FETCH_POSTGRESQL_PROJECT_FAILURE\";\r\nexport const ADD_POSTGRESQL_PROJECT_SUCCESS = \"ADD_POSTGRESQL_PROJECT_SUCCESS\";\r\nexport const ADD_POSTGRESQL_PROJECT_FAILURE = \"ADD_POSTGRESQL_PROJECT_FAILURE\";\r\nexport const EDIT_POSTGRESQL_PROJECT_SUCCESS = \"EDIT_POSTGRESQL_PROJECT_SUCCESS\";\r\nexport const EDIT_POSTGRESQL_PROJECT_FAILURE = \"EDIT_POSTGRESQL_PROJECT_FAILURE\";\r\nexport const DELETE_POSTGRESQL_PROJECT_SUCCESS = \"DELETE_POSTGRESQL_PROJECT_SUCCESS\";\r\nexport const DELETE_POSTGRESQL_PROJECT_FAILURE = \"DELETE_POSTGRESQL_PROJECT_FAILURE\";\r\n\r\n// == PostgreSQL Projects Actions == //\r\nexport const FETCH_POSTGRESQL_PROJECTS_SUCCESS = \"FETCH_POSTGRESQL_PROJECTS_SUCCESS\";\r\nexport const FETCH_POSTGRESQL_PROJECTS_FAILURE = \"FETCH_POSTGRESQL_PROJECTS_FAILURE\";\r\n\r\n\r\n// == PostgreSQL Projects Functions == //\r\nexport const fetchPostgresqlProjects = ()=> dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get('/api/postgresqlprojects')\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_POSTGRESQL_PROJECTS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_POSTGRESQL_PROJECTS_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n\r\n// == PostgreSQL Project Functions == //\r\nexport const fetchPostgresqlProject = postgresql_project_id => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get(`/api/postgresqlprojects/${postgresql_project_id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_POSTGRESQL_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_POSTGRESQL_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n// export const addPostgresqlProject = postgresql_project => dispatch => {\r\n//   dispatch({ type: POST_INITIALIZE })\r\n\r\n//   axiosWithAuth()\r\n//     .post('/api/pgprojects', postgresql_project)\r\n//     .then(res => {\r\n//       dispatch({\r\n//         type: ADD_POSTGRESQL_PROJECT_SUCCESS,\r\n//         payload: res.data\r\n//       });\r\n//     })\r\n//     .catch(err => {\r\n//       dispatch({\r\n//         type: ADD_POSTGRESQL_PROJECT_FAILURE,\r\n//         payload: { err, message: err.message }\r\n//       });\r\n//     });\r\n// };\r\n\r\nexport const addPostgresqlProject = (postgresql_project, props) => dispatch => {\r\n  dispatch({ type: POST_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .post('/api/postgresqlprojects', postgresql_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_POSTGRESQL_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      props.history.push(\"/\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ADD_POSTGRESQL_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const editPostgresqlProject = (postgresql_project_id, postgresql_project) => dispatch => {\r\n  axiosWithAuth()\r\n    .put(`/api/postgresqlprojects/${postgresql_project_id}`, postgresql_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: EDIT_POSTGRESQL_PROJECT_SUCCESS\r\n      });\r\n      fetchPostgresqlProject(postgresql_project_id)\r\n      console.log(\"editPostgresqlProject Success\", res);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: EDIT_POSTGRESQL_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const deletePostgresqlProject = (postgresql_project_id, user_id, props) => dispatch => {\r\n  dispatch({ type: DELETE_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .delete(`/api/postgresqlprojects/${postgresql_project_id}`)\r\n    .then(() => {\r\n      dispatch({\r\n        type: DELETE_POSTGRESQL_PROJECT_SUCCESS\r\n      });\r\n      window.location.reload();\r\n      fetchPostgresqlProjects(user_id);\r\n      props.history.push('/api/postgresqlprojects');\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_POSTGRESQL_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../App.css';\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  CardActions,\r\n  Button\r\n} from 'react-mdl';\r\nimport { \r\n  deletePostgresqlProject, \r\n  editPostgresqlProject, \r\n  fetchPostgresqlProject \r\n} from '../../actions/postgresqlProjectActions';\r\n\r\nfunction PostgresqlProjectCard(props) {\r\n\r\n  const [postgresqlProject, setPostgresqlProject] = useState({\r\n    postgresql_project_image: \"\",\r\n    postgresql_project_title: \"\",\r\n    postgresql_project_description: \"\",\r\n    postgresql_project_github_link: \"\",\r\n    postgresql_project_live_link: \"\"\r\n  })\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.fetchPostgresqlProject(props.postgresql_project_id);\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setPostgresqlProject({\r\n      ...postgresqlProject,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    props.editPostgresqlProject(props.postgresql_project_id, postgresqlProject);\r\n    setEditMode(false);\r\n    props.fetchPostgresqlProject(props.postgresql_project_id);\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const triggerEditConfirmation = e => {\r\n    e.preventDefault();\r\n    setEditMode(true);\r\n    setPostgresqlProject({\r\n      ...postgresqlProject,\r\n      postgresql_project_image: props.postgresql_project_image,\r\n      postgresql_project_title: props.postgresql_project_title,\r\n      postgresql_project_description: props.postgresql_project_description,\r\n      postgresql_project_github_link: props.postgresql_project_github_link,\r\n      postgresql_project_live_link: props.postgresql_project_live_link\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-card\">\r\n        {editMode ? (\r\n          <div className=\"project-box\">\r\n            <h1>Edit Project</h1>\r\n            <form>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"postgresql_project_image\"\r\n                  value={postgresqlProject.postgresql_project_image}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Image URL:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"postgresql_project_title\"\r\n                  value={postgresqlProject.postgresql_project_title}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Title:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"postgresql_project_description\"\r\n                  value={postgresqlProject.postgresql_project_description}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Description:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"postgresql_project_github_link\"\r\n                  value={postgresqlProject.postgresql_project_github_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Github Link:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"postgresql_project_live_link\"\r\n                  value={postgresqlProject.postgresql_project_live_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Live Link:</label>\r\n              </div>\r\n              <button onClick={handleEdit}>Commit Changes</button>\r\n              <button onClick={() => setEditMode(false)}>Cancel</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <Card shadow={5} style={{ minWidth: '450', margin: 'auto', borderRadius: '10px' }}>\r\n            <CardTitle style={{ height: '176px', background: `url(${props.postgresql_project_image}) center / cover` }}>\r\n                <span className=\"project-title\">\r\n                  {props.postgresql_project_title}\r\n                </span>\r\n              </CardTitle>  \r\n              <CardText className=\"project-card-description\">\r\n                {props.postgresql_project_description}\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\", padding: \"0\" }}\r\n                  href={props.postgresql_project_github_link} \r\n                  target=\"_blank\">\r\n                    Github\r\n                </Button>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\" }}\r\n                  href={props.postgresql_project_live_link} \r\n                  target=\"_blank\">\r\n                    LiveDemo\r\n                </Button>\r\n                {localStorage.getItem(\"token\") ? (\r\n                  <>\r\n                    <Button \r\n                      colored\r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={triggerEditConfirmation}\r\n                      target=\"_blank\">\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                      colored \r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={() => props.deletePostgresqlProject(props.postgresql_project_id, props)}>\r\n                      Delete\r\n                    </Button>\r\n                </>\r\n                ) : (\r\n                  <span /> \r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n        )}\r\n            \r\n    </div>\r\n  )\r\n} \r\n\r\nexport default connect(null, \r\n  { deletePostgresqlProject, fetchPostgresqlProject, editPostgresqlProject })\r\n  (PostgresqlProjectCard);","import React, { useEffect, useState } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { fetchPostgresqlProjects } from '../../actions/postgresqlProjectActions';\r\nimport PostgresqlProjectCard from '../project_cards/PostgresqlProjectCard';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\nimport '../../App.css';\r\n\r\nconst PostgresqlProjectCardContainer = props => {\r\n\r\n  const [postgresqlProjects, setPostgresqlProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // props.fetchPostgresqlProjects(props.postgresql_project_id);\r\n    axiosWithAuth()\r\n      .get('/api/postgresqlprojects')\r\n      .then(res => {\r\n        setPostgresqlProjects(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"project-card-container\">\r\n      {/* {props.postgresql_projects &&\r\n        props.postgresql_projects.map((postgresql_project, index) => {\r\n          return (\r\n            <PostgresqlProjectCard key={index} postgresql_project={postgresql_project} />\r\n          )\r\n        })} */}\r\n        {postgresqlProjects.length > 0 ?\r\n          (postgresqlProjects.map(postgresql_project => {\r\n            return (\r\n                <PostgresqlProjectCard {...postgresql_project} key={postgresql_project.postgresql_project_id} />\r\n            )\r\n          })) : (\r\n            <h4>Loading...</h4>\r\n          )\r\n        }\r\n    </div>\r\n  )\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     postgresql_projects: state.displayedPostgresqlProjects,\r\n//     isFetching: state.isFetching\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps, \r\n//   { fetchPostgresqlProjects })(PostgresqlProjectCardContainer);\r\n\r\nexport default PostgresqlProjectCardContainer;","import { axiosWithAuth } from '../utils/axiosWithAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\n// == General Project Actions == //\r\nexport const FETCH_INITIALIZE = \"FETCH_INITIALIZE\";\r\nexport const POST_INITIALIZE = \"POST_INITIALIZE\";\r\nexport const DELETE_INITIALIZE = \"DELETE_INITIALIZE\";\r\n\r\n// == React Project Actions == //\r\nexport const FETCH_PYTHON_PROJECT_SUCCESS = \"FETCH_PYTHON_PROJECT_SUCCESS\";\r\nexport const FETCH_PYTHON_PROJECT_FAILURE = \"FETCH_PYTHON_PROJECT_FAILURE\";\r\nexport const ADD_PYTHON_PROJECT_SUCCESS = \"ADD_PYTHON_PROJECT_SUCCESS\";\r\nexport const ADD_PYTHON_PROJECT_FAILURE = \"ADD_PYTHON_PROJECT_FAILURE\";\r\nexport const EDIT_PYTHON_PROJECT_SUCCESS = \"EDIT_PYTHON_PROJECT_SUCCESS\";\r\nexport const EDIT_PYTHON_PROJECT_FAILURE = \"EDIT_PYTHON_PROJECT_FAILURE\";\r\nexport const DELETE_PYTHON_PROJECT_SUCCESS = \"DELETE_PYTHON_PROJECT_SUCCESS\";\r\nexport const DELETE_PYTHON_PROJECT_FAILURE = \"DELETE_PYTHON_PROJECT_FAILURE\";\r\n\r\n// == React Projects Actions == //\r\nexport const FETCH_PYTHON_PROJECTS_SUCCESS = \"FETCH_PYTHON_PROJECTS_SUCCESS\";\r\nexport const FETCH_PYTHON_PROJECTS_FAILURE = \"FETCH_PYTHON_PROJECTS_FAILURE\";\r\n\r\n\r\n// == React Projects Functions == //\r\nexport const fetchPythonProjects = () => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get('/api/pythonprojects')\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_PYTHON_PROJECTS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_PYTHON_PROJECTS_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n\r\n// == React Project Functions == //\r\nexport const fetchPythonProject = python_project_id => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get(`/api/pythonprojects/${python_project_id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_PYTHON_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_PYTHON_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n// export const addReactProject = react_project => dispatch => {\r\n//   dispatch({ type: POST_INITIALIZE })\r\n\r\n//   axiosWithAuth()\r\n//     .post('/api/reactprojects', react_project)\r\n//     .then(res => {\r\n//       dispatch({\r\n//         type: ADD_REACT_PROJECT_SUCCESS,\r\n//         payload: res.data\r\n//       });\r\n//     })\r\n//     .catch(err => {\r\n//       dispatch({\r\n//         type: ADD_REACT_PROJECT_FAILURE,\r\n//         payload: { err, message: err.message }\r\n//       });\r\n//     });\r\n// };\r\nexport const addPythonProject = (python_project, props) => dispatch => {\r\n  dispatch({ type: POST_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .post('/api/pythonprojects', python_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_PYTHON_PROJECT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      props.history.push(\"/projects\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ADD_PYTHON_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const editPythonProject = (python_project_id, python_project) => dispatch => {\r\n  axiosWithAuth()\r\n    .put(`/api/pythonprojects/${python_project_id}`, python_project)\r\n    .then(res => {\r\n      dispatch({\r\n        type: EDIT_PYTHON_PROJECT_SUCCESS\r\n      });\r\n      fetchPythonProject(python_project_id)\r\n      console.log(\"editPythonProject Success\", res);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: EDIT_PYTHON_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const deletePythonProject = (python_project_id, props) => dispatch => {\r\n  dispatch({ type: DELETE_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .delete(`/api/pythonprojects/${python_project_id}`)\r\n    .then(() => {\r\n      dispatch({\r\n        type: DELETE_PYTHON_PROJECT_SUCCESS\r\n      });\r\n      window.location.reload();\r\n      fetchPythonProjects();\r\n      props.history.push('/api/projects');\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_PYTHON_PROJECT_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../App.css';\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  CardActions,\r\n  Button\r\n} from 'react-mdl';\r\nimport { \r\n  deletePythonProject, \r\n  editPythonProject, \r\n  fetchPythonProject \r\n} from '../../actions/pythonProjectActions';\r\n\r\nfunction PythonProjectCard(props) {\r\n\r\n  const [pythonProject, setPythonProject] = useState({\r\n    python_project_image: \"\",\r\n    python_project_title: \"\",\r\n    python_project_description: \"\",\r\n    python_project_github_link: \"\",\r\n    python_project_live_link: \"\"\r\n  })\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.fetchPythonProject(props.python_project_id);\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setPythonProject({\r\n      ...pythonProject,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    props.editPythonProject(props.python_project_id, pythonProject);\r\n    setEditMode(false);\r\n    props.fetchPythonProject(props.python_project_id);\r\n    window.location.reload(true);\r\n  };\r\n\r\n  const triggerEditConfirmation = e => {\r\n    e.preventDefault();\r\n    setEditMode(true);\r\n    setPythonProject({\r\n      ...pythonProject,\r\n      python_project_image: props.python_project_image,\r\n      python_project_title: props.python_project_title,\r\n      python_project_description: props.python_project_description,\r\n      python_project_github_link: props.python_project_github_link,\r\n      python_project_live_link: props.python_project_live_link\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-card\">\r\n        {editMode ? (\r\n          <div className=\"project-box\">\r\n            <h1>Edit Project</h1>\r\n            <form>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"python_project_image\"\r\n                  value={pythonProject.python_project_image}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Image URL:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"python_project_title\"\r\n                  value={pythonProject.python_project_title}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Title:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"python_project_description\"\r\n                  value={pythonProject.python_project_description}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Description:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"python_project_github_link\"\r\n                  value={pythonProject.python_project_github_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Github Link:</label>\r\n              </div>\r\n              <div className=\"project-label\">\r\n                <input \r\n                  type=\"text\"\r\n                  name=\"python_project_live_link\"\r\n                  value={pythonProject.python_project_live_link}\r\n                  onChange={handleChange}\r\n                />\r\n                <label>Live Link:</label>\r\n              </div>\r\n              <button onClick={handleEdit}>Commit Changes</button>\r\n              <button onClick={() => setEditMode(false)}>Cancel</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <Card shadow={5} style={{ minWidth: '450', margin: 'auto', borderRadius: '10px' }}>\r\n            <CardTitle style={{ height: '176px', background: `url(${props.python_project_image}) center / cover` }}>\r\n                <span className=\"project-title\">\r\n                  {props.python_project_title}\r\n                </span>\r\n              </CardTitle>  \r\n              <CardText className=\"project-card-description\">\r\n                {props.python_project_description}\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\", padding: \"0\" }}\r\n                  href={props.python_project_github_link} \r\n                  target=\"_blank\">\r\n                    Github\r\n                </Button>\r\n                <Button \r\n                  colored\r\n                  style={{ fontSize: \"12px\" }}\r\n                  href={props.python_project_live_link} \r\n                  target=\"_blank\">\r\n                    LiveDemo\r\n                </Button>\r\n                {localStorage.getItem(\"token\") ? (\r\n                  <>\r\n                    <Button \r\n                      colored\r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={triggerEditConfirmation}\r\n                      target=\"_blank\">\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                      colored \r\n                      style={{ fontSize: \"12px\" }}\r\n                      onClick={() => props.deletePythonProject(props.python_project_id, props)}>\r\n                      Delete\r\n                    </Button>\r\n                </>\r\n                ) : (\r\n                  <span /> \r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n        )}\r\n            \r\n    </div>\r\n  )\r\n} \r\n\r\nexport default connect(null, \r\n  { deletePythonProject, fetchPythonProject, editPythonProject })\r\n  (PythonProjectCard);","import React, { useEffect, useState } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { fetchReactProjects } from '../../actions/reactProjectActions';\r\nimport PythonProjectCard from '../project_cards/PythonProjectCard';\r\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\r\nimport '../../App.css';\r\n\r\nconst PythonProjectCardContainer = props => {\r\n\r\n  const [pythonProjects, setPythonProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // props.fetchReactProjects(props.react_project_id);\r\n    axiosWithAuth()\r\n      .get('/api/pythonprojects')\r\n      .then(res => {\r\n        setPythonProjects(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"project-card-container\">\r\n      {/* {props.react_projects &&\r\n        props.react_projects.map((react_project) => {\r\n          return (\r\n            // <ReactProjectCard key={index} react_project={react_project} />\r\n            <ReactProjectCard {...react_project} key={react_project.react_project_id} />\r\n          )\r\n        })} */}\r\n        {pythonProjects.length > 0 ?\r\n          (pythonProjects.map(python_project => {\r\n            return (\r\n                <PythonProjectCard {...python_project} key={python_project.python_project_id} />\r\n            )\r\n          })) : (\r\n            <h4>Loading...</h4>\r\n          )\r\n        }\r\n    </div>\r\n  )\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     react_projects: state.displayedReactProjects,\r\n//     isFetching: state.isFetching\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps, \r\n//   { fetchReactProjects })(ReactProjectCardContainer);\r\n\r\nexport default PythonProjectCardContainer;","import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nimport ReactProjectCardContainer from './containers/ReactProjectCardContainer';\r\nimport ReduxProjectCardContainer from './containers/ReduxProjectCardContainer';\r\nimport SqliteProjectCardContainer from './containers/SqliteProjectCardContainer';\r\nimport PostgresqlProjectCardContainer from './containers/PostgresqlProjectCardContainer';\r\nimport PythonProjectCardContainer from './containers/PythonProjectCardContainer';\r\n\r\n// React Mdl \r\nimport { Tabs, Tab, Grid, Cell } from 'react-mdl';\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      activeTab: 0,\r\n    }\r\n  }\r\n\r\n  toggleCategories() {\r\n    // React Projects\r\n    if (this.state.activeTab === 0) {\r\n\r\n      return (\r\n        <div className=\"projects-grid\" id=\"react\">\r\n          {/* {this.props.react_projects &&\r\n            // this.props.react_projects.map((react_project, index) => (\r\n              // <ReactProjectCard key={index} react_project={react_project} />\r\n              <ReactProjectCardContainer react_project-id={index} react_project={react_project} />\r\n            ))} */}\r\n            <ReactProjectCardContainer />\r\n          {/* <ReactProjectCardContainer react_project_id={this.props.react_project_id} /> */}\r\n          <Link to=\"/addreact\" className=\"project-button\">Add React Project</Link>\r\n        </div>\r\n      )\r\n\r\n    // Redux Projects\r\n    } else if (this.state.activeTab === 1) {\r\n\r\n      // useEffect(() => {\r\n      //   this.props.fetchReduxProjects(this.props.redux_project_id);\r\n      // }, []);\r\n\r\n      return (\r\n        <div className=\"projects-grid\" id=\"redux\">\r\n          {/* {this.props.redux_projects &&\r\n            this.props.redux_projects.map((redux_project, index) => (\r\n              <ReduxProjectCard key={index} redux_project={redux_project} />\r\n            ))} */}\r\n          <ReduxProjectCardContainer />\r\n          <Link to=\"/addredux\" className=\"project-button\">Add Redux Project</Link>\r\n        </div>\r\n      )\r\n\r\n    // Node Projects\r\n\r\n    // Sqlite Projects\r\n  } else if (this.state.activeTab === 2) {\r\n\r\n    // useEffect(() => {\r\n    //   this.props.fetchSqliteProjects(this.props.sqlite_project_id);\r\n    // }, []);\r\n\r\n    return (\r\n      <div className=\"projects-grid\" id=\"sqlite\">\r\n        {/* {this.props.sqlite_projects &&\r\n          this.props.sqlite_projects.map((sqlite_project, index) => (\r\n            <SqliteProjectCard key={index} sqlite_project={sqlite_project} />\r\n          ))} */}\r\n        <SqliteProjectCardContainer />\r\n        <Link to=\"/addsqlite\" className=\"project-button\">Add Sqlite Project</Link>\r\n      </div>\r\n    )\r\n\r\n    // PostgreSQL Projects\r\n  } else if (this.state.activeTab === 3) {\r\n\r\n    // useEffect(() => {\r\n    //   this.props.fetchPostgresqlProjects(this.props.postgresql_project_id);\r\n    // }, []);\r\n\r\n    return (\r\n      <div className=\"projects-grid\" id=\"postgresql\">\r\n        {/* {this.props.postgresql_projects &&\r\n          this.props.postgresql_projects.map((postgresql_project, index) => (\r\n            <PostgresqlProjectCard key={index} postgresql_project={postgresql_project} />\r\n          ))} */}\r\n        <PostgresqlProjectCardContainer />\r\n        <Link to=\"/addpostgresql\" className=\"project-button\">Add PostgreSQL Project</Link>\r\n      </div>\r\n    )\r\n    } else if (this.state.activeTab === 4) {\r\n\r\n      // useEffect(() => {\r\n      //   this.props.fetchPostgresqlProjects(this.props.postgresql_project_id);\r\n      // }, []);\r\n  \r\n      return (\r\n        <div className=\"projects-grid\" id=\"python\">\r\n          {/* {this.props.postgresql_projects &&\r\n            this.props.postgresql_projects.map((postgresql_project, index) => (\r\n              <PostgresqlProjectCard key={index} postgresql_project={postgresql_project} />\r\n            ))} */}\r\n          <PythonProjectCardContainer />\r\n          <Link to=\"/addpython\" className=\"project-button\">Add Python Project</Link>\r\n        </div>\r\n      )\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"category-tabs\">\r\n        <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId })} ripple>\r\n          <Tab>React / JavaScript</Tab>\r\n          <Tab>Redux</Tab>\r\n          <Tab>Sqlite</Tab>\r\n          <Tab>PostgreSQL</Tab>\r\n          <Tab>Python</Tab>\r\n        </Tabs>\r\n\r\n          <Grid>\r\n            <Cell col={12}>\r\n              <div className=\"content\">\r\n                {this.toggleCategories()}\r\n              </div>\r\n            </Cell>\r\n          </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     react_project: state.redux_project,\r\n//     redux_project: state.redux_project,\r\n//     node_project: state.node_project,\r\n//     sqlite_project: state.sqlite_project,\r\n//     postgresql_project: state.postgresql_project\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, {})(Projects);\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\n// React Mdl\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Education extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        {/* Left Side */}\r\n        <Cell col={4}>\r\n          <p>{this.props.startYear} - {this.props.endYear}</p>\r\n        </Cell>\r\n\r\n        {/* Right Side */}\r\n        <Cell col={8}>\r\n          <h4 style={{ marginTop: '0px'}}>\r\n            {this.props.schoolName}\r\n          </h4>\r\n          <p>{this.props.schoolDescription}</p>\r\n        </Cell>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Education;","import React, { Component } from 'react';\r\n\r\n// React Mdl\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Experience3 extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        {/* Left Side */}\r\n        <Cell col={4}>\r\n          <p>{this.props.startYear} - {this.props.endYear}</p>\r\n        </Cell>\r\n\r\n        {/* Right Side */}\r\n        <Cell col={8}>\r\n          <h4 style={{ marginTop: '0px'}}>\r\n            {this.props.jobTitle}\r\n          </h4>\r\n          <h5 style={{ marginTop: '0px' }}>\r\n            {this.props.jobName}\r\n          </h5>\r\n          <ul>\r\n            <li>{'\\u2022'} {this.props.jobDescription1}</li>\r\n            <li>{`\\u2022`} {this.props.jobDescription2}</li>\r\n            <li>{`\\u2022`} {this.props.jobDescription3}</li>\r\n          </ul>\r\n        </Cell>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Experience3;","import React, { Component } from 'react';\r\n\r\n// React Mdi\r\nimport { Grid, Cell, ProgressBar } from 'react-mdl';\r\n\r\nclass Skills extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Cell col={12}>\r\n          <div style={{ display: 'flex' }}>\r\n            {this.props.skill}\r\n            <ProgressBar style={{ margin: 'auto', width: '75%' }} progress={this.props.progress} />\r\n          </div>\r\n        </Cell>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Skills;","import React, { Component } from 'react';\r\nimport Avatar from '../../images/avatar.jpg';\r\nimport Education from './Education';\r\nimport Experience from './Experience';\r\nimport Skills from './Skills';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// React Mdl\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid>\r\n\r\n          {/* Left Side */}\r\n          <Cell className=\"resume-left-col\" col={4}>\r\n\r\n            <h2 style={{ paddingTop: '0.5em' }}>\r\n              Tiffany Simionescu\r\n            </h2>\r\n            <h4 style={{ color: 'grey'}}>\r\n              Web Developer\r\n            </h4>\r\n            <hr />\r\n            <p>I love learning about new design elements for website \r\n               presence, and innovative ways to enhance my code. Helping \r\n               my clients to achieve their desired look and database \r\n               functionality for their online business is something I’m \r\n               very passionate about. </p>\r\n            <hr />\r\n            <h5>Address</h5>\r\n            <p>Easley, SC 29642</p>\r\n            <h5>Phone</h5>\r\n            <p>(864) 283-5263</p>\r\n            <h5>Email</h5>\r\n            <p>tiffany.simionescu@gmail.com</p>\r\n            <h5>Web</h5>\r\n            <Link \r\n              to=\"/\" \r\n              className=\"project-button resume-button\">\r\n                tiffanysimionescu.com\r\n            </Link>\r\n            <hr />\r\n          </Cell>\r\n\r\n          {/* Right Side */}\r\n          <Cell className=\"resume-right-col\" col={8}>\r\n            <h2>Education</h2>\r\n              <Education\r\n                startYear={2019}\r\n                endYear={2020}\r\n                schoolName=\"Lambda School\"\r\n                schoolDescription=\"Lambda School is a 9+ month computer \r\n                science & software engineering program that provides an \r\n                immersive hands-on curriculum with a focus on computer \r\n                science, and full-stack web development. \"\r\n              />\r\n              <Education\r\n                startYear={2010}\r\n                endYear={2011}\r\n                schoolName=\" Lynn College of Communication and Design \r\n                (formally known as Digital Media Arts College)\"\r\n                schoolDescription=\"Lynn College of Communication and \r\n                Design offers specialized Bachelor of Fine Arts degrees \r\n                in Computer Animation and Graphic Design as well as \r\n                Master of Fine Arts degrees in Visual Effects Animation \r\n                and Web Design\"\r\n              />\r\n\r\n            <hr />\r\n\r\n            <h2>Experience</h2>\r\n              <Experience\r\n                startYear={2012}\r\n                endYear={2013}\r\n                jobName=\"Advanced Cash Fast\"\r\n                jobTitle=\"Loan Processing Clerk\"\r\n                jobDescription1=\"Received calls from potential customers interested in applying for loans.\"\r\n                jobDescription2=\"Gathered sensitive documents for loan processing to determine eligibility.\"\r\n                jobDescription3=\"Reviewed all proper documents and determined rejection or approval of a loan.\"\r\n              />\r\n              <Experience\r\n                startYear={2010}\r\n                endYear={2012}\r\n                jobName=\"Sketch It Graphics\"\r\n                jobTitle=\"Graphic Designer | Secretary\"\r\n                jobDescription1=\"Developed and edited customer designs for marketing and fashion purposes.\"\r\n                jobDescription2=\"Operated a wide variety of printers for clothing design and screen printing.\"\r\n                jobDescription3=\"Managed the company's finances: Accounts Payable, Accounts Receivable.\"\r\n              />\r\n              <Experience \r\n                startYear={2009}\r\n                endYear={2009}\r\n                jobName=\"Staples\"\r\n                jobTitle=\"Design and Print Associate\"\r\n                jobDescription1=\"Developed and edited customer designs for marketing and fashion purposes.\"\r\n                jobDescription2=\"Operated a wide variety of printers for clothing design and screen printing.\"\r\n                jobDescription3=\"Responsible for selling products and services to potential customers.\"\r\n              />\r\n\r\n            <hr />\r\n\r\n            <h2>Skills</h2>\r\n            <Skills \r\n              skill=\"HTML/CSS\"\r\n              progress=\"100\"\r\n            />\r\n            <Skills \r\n              skill=\"JavaScript\"\r\n              progress=\"90\"\r\n            />\r\n            <Skills\r\n              skill=\"React\"\r\n              progress=\"95\"\r\n            />\r\n            <Skills\r\n              skill=\"NodeJS\"\r\n              progress=\"90\"\r\n            />\r\n            <Skills\r\n              skill=\"Express\"\r\n              progress=\"95\"\r\n            />\r\n            <Skills \r\n              skill=\"PostgreSQL\"\r\n              progress=\"90\"\r\n            />\r\n            <Skills \r\n              skill=\"Python\"\r\n              progress=\"87\"\r\n            />\r\n\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Resume;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/userActions';\r\n\r\nconst LoginForm = props => {\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.login(user, props);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-box-background\">\r\n      <div className=\"login-box\">\r\n        <h1>Login</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"user-box\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              value={user.username}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Username</label>\r\n          </div>\r\n          <div className=\"user-box\">\r\n            <input \r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={user.password}\r\n              onChange={handleChange} \r\n            />\r\n            <label>Password</label>\r\n          </div>\r\n          <button type=\"submit\" className=\"project-button\">Login</button>\r\n        </form>\r\n        \r\n        <p className=\"no-account\">No Account?\r\n          <Link to=\"/register\" className=\"no-account-link\"> Create One</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    loggedIn: state.isLoggedIn\r\n  };\r\n}\r\n\r\nexport default connect(mapStatetoProps, { login })(LoginForm);","import { axiosWithAuth } from \"../utils/axiosWithAuth\";\r\nimport { toast } from 'react-toastify';\r\n\r\n// == General Actions == //\r\nexport const FETCH_INITIALIZE = \"FETCH_INITIALIZE\";\r\nexport const POST_INITIALIZE = \"POST_INITIALIZE\";\r\nexport const DELETE_INITIALIZE = \"DELETE_INITIALIZE\";\r\n\r\n// == User Actions == //\r\nexport const FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\";\r\nexport const FETCH_USER_FAILURE = \"FETCH_USER_FAILURE\";\r\nexport const ADD_USER_SUCCESS = \"ADD_USER_SUCCESS\";\r\nexport const ADD_USER_FAILURE = \"ADD_USER_FAILURE\";\r\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\r\nexport const EDIT_USER_FAILURE = \"EDIT_USER_FAILURE\";\r\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\r\nexport const DELETE_USER_FAILURE = \"DELETE_USER_FAILURE\";\r\n\r\n// == Users Actions == //\r\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\r\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\";\r\n\r\n// == Login Actions == //\r\nexport const LOGIN_START = \"LOGIN_START\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\n// == Logout Action == //\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\n// == User Functions == //\r\nexport const registerUser = (user, props) => dispatch => {\r\n  dispatch({ type: POST_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .post('/api/users/register', user)\r\n    .then(res => {\r\n      dispatch({\r\n        type: ADD_USER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      props.history.push(\"/login\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: ADD_USER_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n      props.history.push(\"/login\");\r\n    });\r\n};\r\n\r\nexport const login = (user, props) => dispatch => {\r\n  dispatch({ type: LOGIN_START });\r\n\r\n  axiosWithAuth()\r\n    .post('/api/users/login', user)\r\n    .then(res => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data.user\r\n      });\r\n      localStorage.setItem(\"token\", res.data.authToken);\r\n      props.history.push('/');\r\n      window.location.reload(false);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: { err, message: err.message }\r\n      });\r\n      console.error(err);\r\n    })\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n  localStorage.clear();\r\n  window.location.reload(false);\r\n}\r\n\r\nexport const fetchUser = user_id => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get(`/api/users/${user_id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_USER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_USER_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    })\r\n}\r\n\r\nexport const editUser = user_id => dispatch => {\r\n  axiosWithAuth()\r\n    .put(`/api/users/${user_id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: EDIT_USER_SUCCESS,\r\n        payload: res.data.user\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: EDIT_USER_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\nexport const deleteUser = (user_id, props) => dispatch => {\r\n  dispatch({ type: DELETE_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .delete(`/api/users/${user_id}`)\r\n    .then(() => {\r\n      dispatch({\r\n        type: DELETE_USER_SUCCESS\r\n      });\r\n      window.location.reload();\r\n      fetchUsers();\r\n      props.history.push('/');\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_USER_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};\r\n\r\n// == Users Functions == //\r\nexport const fetchUsers = () => dispatch => {\r\n  dispatch({ type: FETCH_INITIALIZE });\r\n\r\n  axiosWithAuth()\r\n    .get('/api/users')\r\n    .then(res => {\r\n      dispatch({\r\n        type: FETCH_USERS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: FETCH_USERS_FAILURE,\r\n        payload: { err, message: err.message }\r\n      });\r\n      toast.error(err.message);\r\n    });\r\n};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerUser } from '../../actions/userActions';\r\n\r\n// Add style later\r\n\r\nconst RegisterForm = props => {\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    phone_number: \"\"\r\n  }); \r\n\r\n  const handleChange = e => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.registerUser(user, props);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-box-background\">\r\n    <div className=\"register-box\">\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        \r\n        <div className=\"user-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"First Name\"\r\n            name=\"first_name\"\r\n            value={user.first_name}\r\n            onChange={handleChange}\r\n          />\r\n          <label>First Name</label>\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Last Name\"\r\n            name=\"last_name\"\r\n            value={user.last_name}\r\n            onChange={handleChange}\r\n          />\r\n          <label>Last Name</label>\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={user.username}\r\n            onChange={handleChange}\r\n          />\r\n          <label>Username</label>\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={user.password}\r\n            onChange={handleChange}\r\n          />\r\n          <label>Password</label>\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={user.email}\r\n            onChange={handleChange}\r\n          />\r\n          <label>Email</label>\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Phone Number\"\r\n            name=\"phone_number\"\r\n            value={user.phone_number}\r\n            onChange={handleChange}\r\n          />\r\n          <label>Phone Number</label>\r\n        </div>\r\n\r\n        <button className=\"project-button\">Register</button>\r\n      </form>\r\n\r\n      <p className=\"have-account\">Have an Account?\r\n        <Link to=\"/login\" className=\"have-account-link\"> Login</Link>\r\n      </p>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default connect(null, { registerUser })(RegisterForm);\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    loggedIn: state.isLoggedIn\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, { registerUser })(RegisterForm);","import React, { useState } from'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addReactProject } from '../../actions/reactProjectActions';\r\n\r\nconst ReactProjectForm = props => {\r\n  const [react_project, setReactProject] = useState({\r\n    react_project_image: \"\",\r\n    react_project_title: \"\",\r\n    react_project_description: \"\",\r\n    react_project_github_link: \"\",\r\n    react_project_live_link: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setReactProject({ ...react_project, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.addReactProject(react_project, props);\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-form\">\r\n      <div className=\"project-left-col\">\r\n        <img \r\n          src=\"https://images.unsplash.com/photo-1525547719571-a2d4ac8945e2?ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=80\"\r\n          alt=\"laptop\"\r\n          style={{ borderRadius: \"10px 0 0 10px\", height: \"550px\", width: \"500px\", boxShadow: \"0 15px 25px rgba(0,0,0,.6)\" }}\r\n        />\r\n      </div>\r\n      <div className=\"project-right-col\">\r\n        <h2>New React Project</h2>\r\n        {localStorage.getItem('token') ? (\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"react_project_image\"\r\n              placeholder=\"Image URL\"\r\n              value={react_project.react_project_image}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Image URL</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"react_project_title\"\r\n              placeholder=\"Project Title\"\r\n              value={react_project.react_project_title}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Title</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"react_project_description\"\r\n              placeholder=\"Project Description\"\r\n              value={react_project.react_project_description}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Description</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"react_project_github_link\"\r\n              placeholder=\"Github Link\"\r\n              value={react_project.react_project_github_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Github Link</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"react_project_live_link\"\r\n              placeholder=\"Live Link\"\r\n              value={react_project.react_project_live_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Live Link</label>\r\n            </div>\r\n          <div className=\"project-form-button\">\r\n            <button type=\"submit\" className=\"project-button\">Add React Project</button>\r\n            <Link to=\"/projects\" className=\"project-button cancel-button\">Cancel</Link>\r\n          </div>\r\n        </form>\r\n        ) : (\r\n          <div>\r\n            <h4>Only the Admin can add a new React Project.</h4>\r\n            <Link to=\"/projects\" className=\"project-button\">Return to Projects</Link>\r\n          </div>\r\n        )} \r\n        </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    react_project_id: state.react_project_id\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addReactProject })(ReactProjectForm);","import React, { useState } from'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addReduxProject } from '../../actions/reduxProjectActions';\r\n\r\nconst ReduxProjectForm = props => {\r\n  const [redux_project, setReduxProject] = useState({\r\n    redux_project_image: \"\",\r\n    redux_project_title: \"\",\r\n    redux_project_description: \"\",\r\n    redux_project_github_link: \"\",\r\n    redux_project_live_link: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setReduxProject({ ...redux_project, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.addReduxProject(redux_project, props);\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-form\">\r\n      <div className=\"project-left-col\">\r\n        <img \r\n          src=\"https://images.unsplash.com/photo-1497366754035-f200968a6e72?ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n          alt=\"lake and trees\"\r\n          style={{ borderRadius: \"10px 0 0 10px\", height: \"550px\", width: \"500px\", boxShadow: \"0 15px 25px rgba(0,0,0,.6)\" }}\r\n        />\r\n      </div>\r\n      <div className=\"project-right-col\">\r\n        <h2>New Redux Project</h2>\r\n        {localStorage.getItem('token') ? (\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"redux_project_image\"\r\n              placeholder=\"Image URL\"\r\n              value={redux_project.redux_project_image}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Image URL</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"redux_project_title\"\r\n              placeholder=\"Project Title\"\r\n              value={redux_project.redux_project_title}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Title</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"redux_project_description\"\r\n              placeholder=\"Project Description\"\r\n              value={redux_project.redux_project_description}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Description</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"redux_project_github_link\"\r\n              placeholder=\"Github Link\"\r\n              value={redux_project.redux_project_github_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Github Link</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"redux_project_live_link\"\r\n              placeholder=\"Live Link\"\r\n              value={redux_project.redux_project_live_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Live Link</label>\r\n            </div>\r\n          <div className=\"project-form-button\">\r\n            <button type=\"submit\" className=\"project-button\">Add Redux Project</button>\r\n            <Link to=\"/projects\" className=\"project-button cancel-button\">Cancel</Link>\r\n          </div>\r\n        </form>\r\n        ) : (\r\n          <div>\r\n            <h4>Only the Admin can add a new Redux Project.</h4>\r\n            {/* <Link to=\"/projects\" className=\"project-button\">Return to Projects</Link> */}\r\n            <a href=\"/projects\" className=\"project-button\">Return to Projects</a>\r\n          </div>\r\n        )} \r\n        </div>\r\n    </div>\r\n    )};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    redux_project_id: state.redux_project_id\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addReduxProject })(ReduxProjectForm);","import React, { useState } from'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addSqliteProject } from '../../actions/sqliteProjectActions';\r\n\r\nconst SqliteProjectForm = props => {\r\n  const [sqlite_project, setSqliteProject] = useState({\r\n    sqlite_project_image: \"\",\r\n    sqlite_project_title: \"\",\r\n    sqlite_project_description: \"\",\r\n    sqlite_project_github_link: \"\",\r\n    sqlite_project_live_link: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setSqliteProject({ ...sqlite_project, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.addSqliteProject(sqlite_project, props);\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-form\">\r\n      <div className=\"project-left-col\">\r\n        <img \r\n          src=\"https://images.unsplash.com/photo-1510751007277-36932aac9ebd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=677&q=80\"\r\n          alt=\"lake and trees\"\r\n          style={{ borderRadius: \"10px 0 0 10px\", height: \"550px\", width: \"500px\", boxShadow: \"0 15px 25px rgba(0,0,0,.6)\" }}\r\n        />\r\n      </div>\r\n      <div className=\"project-right-col\">\r\n        <h2>New SQLite Project</h2>\r\n        {localStorage.getItem('token') ? (\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"sqlite_project_image\"\r\n              placeholder=\"Image URL\"\r\n              value={sqlite_project.sqlite_project_image}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Image URL</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"sqlite_project_title\"\r\n              placeholder=\"Project Title\"\r\n              value={sqlite_project.sqlite_project_title}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Title</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"sqlite_project_description\"\r\n              placeholder=\"Project Description\"\r\n              value={sqlite_project.sqlite_project_description}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Description</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"sqlite_project_github_link\"\r\n              placeholder=\"Github Link\"\r\n              value={sqlite_project.sqlite_project_github_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Github Link</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"sqlite_project_live_link\"\r\n              placeholder=\"Live Link\"\r\n              value={sqlite_project.sqlite_project_live_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Live Link</label>\r\n            </div>\r\n          <div className=\"project-form-button\">\r\n            <button type=\"submit\" className=\"project-button\">Add SQLite Project</button>\r\n            <Link to=\"/projects\" className=\"project-button cancel-button\">Cancel</Link>\r\n          </div>\r\n        </form>\r\n        ) : (\r\n          <div>\r\n            <h4>Only the Admin can add a new SQLite Project.</h4>\r\n            <Link to=\"/projects\" className=\"project-button\">Return to Projects</Link>\r\n          </div>\r\n        )} \r\n        </div>\r\n    </div>\r\n    )};\r\n\r\n    const mapStateToProps = state => {\r\n      return {\r\n        sqlite_project_id: state.sqlite_project_id\r\n      };\r\n    };\r\n    \r\n    export default connect(mapStateToProps, { addSqliteProject })(SqliteProjectForm);","import React, { useState } from'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addPostgresqlProject } from '../../actions/postgresqlProjectActions';\r\n\r\nconst PostgresqlProjectForm = props => {\r\n  const [postgresql_project, setPostgresqlProject] = useState({\r\n    postgresql_project_image: \"\",\r\n    postgresql_project_title: \"\",\r\n    postgresql_project_description: \"\",\r\n    postgresql_project_github_link: \"\",\r\n    postgresql_project_live_link: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setPostgresqlProject({ ...postgresql_project, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.addPostgresqlProject(postgresql_project, props);\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-form\">\r\n      <div className=\"project-left-col\">\r\n        <img \r\n          src=\"https://images.unsplash.com/photo-1554232456-8727aae0cfa4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=675&q=80\"\r\n          alt=\"lake and trees\"\r\n          style={{ borderRadius: \"10px 0 0 10px\", height: \"550px\", width: \"500px\", boxShadow: \"0 15px 25px rgba(0,0,0,.6)\" }}\r\n        />\r\n      </div>\r\n      <div className=\"project-right-col\">\r\n        <h2>New PostgreSQL Project</h2>\r\n        {localStorage.getItem('token') ? (\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"postgresql_project_image\"\r\n              placeholder=\"Image URL\"\r\n              value={postgresql_project.postgresql_project_image}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Image URL</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"postgresql_project_title\"\r\n              placeholder=\"Project Title\"\r\n              value={postgresql_project.postgresql_project_title}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Title</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"postgresql_project_description\"\r\n              placeholder=\"Project Description\"\r\n              value={postgresql_project.postgresql_project_description}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Description</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"postgresql_project_github_link\"\r\n              placeholder=\"Github Link\"\r\n              value={postgresql_project.postgresql_project_github_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Github Link</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"postgresql_project_live_link\"\r\n              placeholder=\"Live Link\"\r\n              value={postgresql_project.postgresql_project_live_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Live Link</label>\r\n            </div>\r\n          <div className=\"project-form-button\">\r\n            <button type=\"submit\" className=\"project-button\">Add PostgreSQL Project</button>\r\n            <Link to=\"/projects\" className=\"project-button cancel-button\">Cancel</Link>\r\n          </div>\r\n        </form>\r\n        ) : (\r\n          <div>\r\n            <h4>Only the Admin can add a new PostgreSQL Project.</h4>\r\n            <Link to=\"/projects\" className=\"project-button\">Return to Projects</Link>\r\n          </div>\r\n        )} \r\n        </div>\r\n    </div>\r\n    )};\r\n\r\n    const mapStateToProps = state => {\r\n      return {\r\n        postgresql_project_id: state.postgresql_project_id\r\n      };\r\n    };\r\n    \r\n    export default connect(mapStateToProps, { addPostgresqlProject })(PostgresqlProjectForm);","import React, { useState } from'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addPythonProject } from '../../actions/pythonProjectActions';\r\n\r\nconst PythonProjectForm = props => {\r\n  const [python_project, setPythonProject] = useState({\r\n    python_project_image: \"\",\r\n    python_project_title: \"\",\r\n    python_project_description: \"\",\r\n    python_project_github_link: \"\",\r\n    python_project_live_link: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setPythonProject({ ...python_project, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.addPythonProject(python_project, props);\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-form\">\r\n      <div className=\"project-left-col\">\r\n        <img \r\n          src=\"https://images.unsplash.com/photo-1525547719571-a2d4ac8945e2?ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=80\"\r\n          alt=\"laptop\"\r\n          style={{ borderRadius: \"10px 0 0 10px\", height: \"550px\", width: \"500px\", boxShadow: \"0 15px 25px rgba(0,0,0,.6)\" }}\r\n        />\r\n      </div>\r\n      <div className=\"project-right-col\">\r\n        <h2>New Python Project</h2>\r\n        {localStorage.getItem('token') ? (\r\n          <form onSubmit={handleSubmit}>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"python_project_image\"\r\n              placeholder=\"Image URL\"\r\n              value={python_project.python_project_image}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Image URL</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"python_project_title\"\r\n              placeholder=\"Project Title\"\r\n              value={python_project.python_project_title}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Title</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"python_project_description\"\r\n              placeholder=\"Project Description\"\r\n              value={python_project.python_project_description}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Description</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"python_project_github_link\"\r\n              placeholder=\"Github Link\"\r\n              value={python_project.python_project_github_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Github Link</label>\r\n            </div>\r\n\r\n            <div className=\"project-form-box\">\r\n              <input \r\n              type=\"text\"\r\n              name=\"python_project_live_link\"\r\n              placeholder=\"Live Link\"\r\n              value={python_project.python_project_live_link}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Live Link</label>\r\n            </div>\r\n          <div className=\"project-form-button\">\r\n            <button type=\"submit\" className=\"project-button\">Add Python Project</button>\r\n            <Link to=\"/projects\" className=\"project-button cancel-button\">Cancel</Link>\r\n          </div>\r\n        </form>\r\n        ) : (\r\n          <div>\r\n            <h4>Only the Admin can add a new Python Project.</h4>\r\n            <Link to=\"/projects\" className=\"project-button\">Return to Projects</Link>\r\n          </div>\r\n        )} \r\n        </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    python_project_id: state.python_project_id\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addPythonProject })(PythonProjectForm);","import React from 'react';\r\n// import { Switch, Route } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport LandingPage from './LandingPage';\r\nimport ContactForm from './forms/ContactForm';\r\nimport Projects from './Projects';\r\nimport Resume from './resume/Resume';\r\nimport LoginForm from './forms/LoginForm';\r\nimport RegisterForm from './forms/RegisterForm';\r\nimport ReactProjectForm from './forms/ReactProjectForm';\r\nimport ReduxProjectForm from './forms/ReduxProjectForm';\r\nimport SqliteProjectForm from './forms/SqliteProjectForm';\r\nimport PostgresqlProjectForm from './forms/PostgresqlProjectForm';\r\nimport PythonProjectForm from './forms/PythonProjectForm';\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={LandingPage} />\r\n    <Route path=\"/contact\" component={ContactForm} />\r\n    <Route path=\"/projects\" component={Projects} />\r\n    <Route path=\"/resume\" component={Resume} />\r\n    <Route path=\"/login\" component={LoginForm} />\r\n    <Route path=\"/register\" component={RegisterForm} />\r\n    <Route path=\"/addreact\" component={ReactProjectForm} />\r\n    <Route path=\"/addredux\" component={ReduxProjectForm} />\r\n    <Route path=\"/addsqlite\" component={SqliteProjectForm} />\r\n    <Route path=\"/addpostgresql\" component={PostgresqlProjectForm} />\r\n    <Route path=\"/addpython\" component={PythonProjectForm} />\r\n  </Switch>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/userActions';\r\nimport Main from './Main';\r\n\r\n// React MDL\r\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <Layout>\r\n          <Header className=\"header-color\" title={<Link to='/'>Tiffany Simionescu</Link>} scroll>\r\n              <Navigation>\r\n                  <Link className=\"nav-link\" to=\"/resume\">Resume</Link>\r\n                  <Link className=\"nav-link\" to=\"/projects\">Projects</Link>\r\n                  <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\r\n                  <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n                  {!localStorage.getItem('token') ? (\r\n                    <Link className=\"nav-link\" to=\"/login\" className=\"link\">Login</Link>\r\n                   ) : (\r\n                    <Link className=\"nav-link\" to=\"/\" className=\"link\"\r\n                    onClick={() => props.logout()}>Log Out</Link>\r\n                   )}\r\n                  {/* {props.loggedIn ? null : (\r\n                    <Link to=\"/register\">Register</Link>\r\n                  )}\r\n                  {props.loggedIn ? (\r\n                    <Link to=\"/\" onClick={() => props.logout()}>Logout</Link>\r\n                  ) : (\r\n                    <Link to=\"/login\">Login</Link>\r\n                  )} */}\r\n              </Navigation>\r\n          </Header>\r\n          <Drawer className=\"drawer-link\" title={<Link style={{ textDecoration: 'none', color: 'black' }}\r\n        to='/'>Tiffany Simionescu</Link>}>\r\n              <Navigation>\r\n                  <Link to=\"/resume\">Resume</Link>\r\n                  <Link to=\"/aboutme\">About Me</Link>\r\n                  <Link to=\"/projects\">Projects</Link>\r\n                  <Link to=\"/contact\">Contact</Link>\r\n                  <Link to=\"/register\">Register</Link>\r\n                  {!localStorage.getItem('token') ? \r\n                    <Link to=\"/login\" className=\"link\">Login</Link>\r\n                    :\r\n                    <Link to=\"/login\" className=\"link\"\r\n                    onClick={() => props.logout()}>Log Out</Link>\r\n                  }\r\n                  {/* {props.loggedIn ? null : (\r\n                    <Link to=\"/register\">Register</Link>\r\n                  )}\r\n                  {props.loggedIn ? (\r\n                    <Link to=\"/\" onClick={() => props.logout()}>Logout</Link>\r\n                  ) : (\r\n                    <Link to=\"/login\">Login</Link>\r\n                  )} */}\r\n              </Navigation>\r\n          </Drawer>\r\n          <Content>\r\n              <div className=\"page-content\" />\r\n              <Main />\r\n          </Content>\r\n      </Layout>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.isLoggedIn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(Nav);\r\n\r\n// export default Nav;","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './components/Nav';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"demo-big-content\">\r\n      <Nav />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n  users: [],\r\n  user: {\r\n    user_id: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    phone_number: \"\"\r\n  },\r\n  displayedReactProjects: [],\r\n  displayedReduxProjects: [],\r\n  displayedSqliteProjects: [],\r\n  displayedPostgresqlProjects: [],\r\n  displayedPythonProjects: [],\r\n\r\n  react_project: {\r\n    react_project_id: \"\",\r\n    react_project_image: \"\",\r\n    react_project_title: \"\",\r\n    react_project_description: \"\",\r\n    react_project_github_link: \"\",\r\n    react_project_live_link: \"\"\r\n  },\r\n\r\n  redux_project: {\r\n    redux_project_id: \"\",\r\n    redux_project_image: \"\",\r\n    redux_project_title: \"\",\r\n    redux_project_description: \"\",\r\n    redux_project_github_link: \"\",\r\n    redux_project_live_link: \"\"\r\n  },\r\n\r\n  sqlite_project: {\r\n    sqlite_project_id: \"\",\r\n    sqlite_project_image: \"\",\r\n    sqlite_project_title: \"\",\r\n    sqlite_project_description: \"\",\r\n    sqlite_project_github_link: \"\",\r\n    sqlite_project_live_link: \"\"\r\n  },\r\n\r\n  postgresql_project: {\r\n    postgresql_project_id: \"\",\r\n    postgresql_project_image: \"\",\r\n    postgresql_project_title: \"\",\r\n    postgresql_project_description: \"\",\r\n    postgresql_project_github_link: \"\",\r\n    postgresql_project_live_link: \"\"\r\n  },\r\n\r\n  python_project: {\r\n    python_project_id: \"\",\r\n    python_project_image: \"\",\r\n    python_project_title: \"\",\r\n    python_project_description: \"\",\r\n    python_project_github_link: \"\",\r\n    python_project_live_link: \"\"\r\n  },\r\n\r\n  isFetching: false,\r\n  error: \"\",\r\n  isSubmitting: false,\r\n  isDeleting: false,\r\n  isLoggedIn: false\r\n};\r\n\r\nexport default initialState;","import initialState from './initialState';\r\nimport {\r\n  // == General Project Actions == //\r\n  FETCH_INITIALIZE,\r\n  POST_INITIALIZE,\r\n  DELETE_INITIALIZE,\r\n\r\n  // == React Project Actions == //\r\n  FETCH_REACT_PROJECT_SUCCESS,\r\n  FETCH_REACT_PROJECT_FAILURE,\r\n  ADD_REACT_PROJECT_SUCCESS,\r\n  ADD_REACT_PROJECT_FAILURE,\r\n  EDIT_REACT_PROJECT_SUCCESS,\r\n  EDIT_REACT_PROJECT_FAILURE,\r\n  DELETE_REACT_PROJECT_SUCCESS,\r\n  DELETE_REACT_PROJECT_FAILURE,\r\n\r\n  // == React Projects Actions == //\r\n  FETCH_REACT_PROJECTS_SUCCESS,\r\n  FETCH_REACT_PROJECTS_FAILURE\r\n\r\n} from '../actions/reactProjectActions';\r\n\r\nconst reactProjectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case POST_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case DELETE_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isDeleting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_REACT_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        reactProject: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_REACT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    case ADD_REACT_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        isSubmitting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case ADD_REACT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case EDIT_REACT_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isEditing: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case EDIT_REACT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case DELETE_REACT_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isDeleting: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case DELETE_REACT_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case FETCH_REACT_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        displayedReactProjects: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_REACT_PROJECTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default reactProjectReducer;","import initialState from './initialState';\r\nimport {\r\n  // == General Project Actions == //\r\n  FETCH_INITIALIZE,\r\n  POST_INITIALIZE,\r\n  DELETE_INITIALIZE,\r\n\r\n  // == Redux Project Actions == //\r\n  FETCH_REDUX_PROJECT_SUCCESS,\r\n  FETCH_REDUX_PROJECT_FAILURE,\r\n  ADD_REDUX_PROJECT_SUCCESS,\r\n  ADD_REDUX_PROJECT_FAILURE,\r\n  EDIT_REDUX_PROJECT_SUCCESS,\r\n  EDIT_REDUX_PROJECT_FAILURE,\r\n  DELETE_REDUX_PROJECT_SUCCESS,\r\n  DELETE_REDUX_PROJECT_FAILURE,\r\n\r\n  // == Redux Projects Actions == //\r\n  FETCH_REDUX_PROJECTS_SUCCESS,\r\n  FETCH_REDUX_PROJECTS_FAILURE\r\n\r\n} from '../actions/reduxProjectActions';\r\n\r\nconst reduxProjectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case POST_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case DELETE_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isDeleting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_REDUX_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        reduxProject: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_REDUX_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    case ADD_REDUX_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        isSubmitting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case ADD_REDUX_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case EDIT_REDUX_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isEditing: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case EDIT_REDUX_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case DELETE_REDUX_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isDeleting: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case DELETE_REDUX_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case FETCH_REDUX_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        displayedReduxProjects: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_REDUX_PROJECTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default reduxProjectReducer;","import initialState from './initialState';\r\nimport {\r\n  // == General Project Actions == //\r\n  FETCH_INITIALIZE,\r\n  POST_INITIALIZE,\r\n  DELETE_INITIALIZE,\r\n\r\n  // == Node Project Actions == //\r\n  FETCH_SQLITE_PROJECT_SUCCESS,\r\n  FETCH_SQLITE_PROJECT_FAILURE,\r\n  ADD_SQLITE_PROJECT_SUCCESS,\r\n  ADD_SQLITE_PROJECT_FAILURE,\r\n  EDIT_SQLITE_PROJECT_SUCCESS,\r\n  EDIT_SQLITE_PROJECT_FAILURE,\r\n  DELETE_SQLITE_PROJECT_SUCCESS,\r\n  DELETE_SQLITE_PROJECT_FAILURE,\r\n\r\n  // == Node Projects Actions == //\r\n  FETCH_SQLITE_PROJECTS_SUCCESS,\r\n  FETCH_SQLITE_PROJECTS_FAILURE\r\n\r\n} from '../actions/sqliteProjectActions';\r\n\r\nconst sqliteProjectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case POST_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case DELETE_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isDeleting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_SQLITE_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        sqliteProject: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_SQLITE_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    case ADD_SQLITE_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        isSubmitting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case ADD_SQLITE_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case EDIT_SQLITE_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isEditing: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case EDIT_SQLITE_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case DELETE_SQLITE_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isDeleting: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case DELETE_SQLITE_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case FETCH_SQLITE_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        displayedSqliteProjects: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_SQLITE_PROJECTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default sqliteProjectReducer;","import initialState from './initialState';\r\nimport {\r\n  // == General Project Actions == //\r\n  FETCH_INITIALIZE,\r\n  POST_INITIALIZE,\r\n  DELETE_INITIALIZE,\r\n\r\n  // == Node Project Actions == //\r\n  FETCH_POSTGRESQL_PROJECT_SUCCESS,\r\n  FETCH_POSTGRESQL_PROJECT_FAILURE,\r\n  ADD_POSTGRESQL_PROJECT_SUCCESS,\r\n  ADD_POSTGRESQL_PROJECT_FAILURE,\r\n  EDIT_POSTGRESQL_PROJECT_SUCCESS,\r\n  EDIT_POSTGRESQL_PROJECT_FAILURE,\r\n  DELETE_POSTGRESQL_PROJECT_SUCCESS,\r\n  DELETE_POSTGRESQL_PROJECT_FAILURE,\r\n\r\n  // == Node Projects Actions == //\r\n  FETCH_POSTGRESQL_PROJECTS_SUCCESS,\r\n  FETCH_POSTGRESQL_PROJECTS_FAILURE\r\n\r\n} from '../actions/postgresqlProjectActions';\r\n\r\nconst postgresqlProjectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case POST_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case DELETE_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isDeleting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_POSTGRESQL_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        postgresqlProject: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_POSTGRESQL_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    case ADD_POSTGRESQL_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        isSubmitting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case ADD_POSTGRESQL_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case EDIT_POSTGRESQL_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isEditing: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case EDIT_POSTGRESQL_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case DELETE_POSTGRESQL_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isDeleting: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case DELETE_POSTGRESQL_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case FETCH_POSTGRESQL_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        displayedPostgresqlProjects: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_POSTGRESQL_PROJECTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default postgresqlProjectReducer;","import initialState from './initialState';\r\nimport {\r\n  // == General Project Actions == //\r\n  FETCH_INITIALIZE,\r\n  POST_INITIALIZE,\r\n  DELETE_INITIALIZE,\r\n\r\n  // == React Project Actions == //\r\n  FETCH_PYTHON_PROJECT_SUCCESS,\r\n  FETCH_PYTHON_PROJECT_FAILURE,\r\n  ADD_PYTHON_PROJECT_SUCCESS,\r\n  ADD_PYTHON_PROJECT_FAILURE,\r\n  EDIT_PYTHON_PROJECT_SUCCESS,\r\n  EDIT_PYTHON_PROJECT_FAILURE,\r\n  DELETE_PYTHON_PROJECT_SUCCESS,\r\n  DELETE_PYTHON_PROJECT_FAILURE,\r\n\r\n  // == React Projects Actions == //\r\n  FETCH_PYTHON_PROJECTS_SUCCESS,\r\n  FETCH_PYTHON_PROJECTS_FAILURE\r\n\r\n} from '../actions/pythonProjectActions';\r\n\r\nconst pythonProjectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case POST_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case DELETE_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isDeleting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_PYTHON_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pythonProject: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_PYTHON_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    case ADD_PYTHON_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        isSubmitting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case ADD_PYTHON_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case EDIT_PYTHON_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isEditing: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case EDIT_PYTHON_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isEditing: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case DELETE_PYTHON_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isDeleting: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case DELETE_PYTHON_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case FETCH_PYTHON_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        displayedPythonProjects: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_PYTHON_PROJECTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default pythonProjectReducer;","import initialState from './initialState';\r\nimport {\r\n\r\n  // == General Actions == //\r\n  FETCH_INITIALIZE,\r\n  POST_INITIALIZE,\r\n  DELETE_INITIALIZE,\r\n\r\n  // == User Actions == //\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_FAILURE,\r\n  ADD_USER_SUCCESS,\r\n  ADD_USER_FAILURE,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_FAILURE,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_FAILURE,\r\n\r\n  // == Users Actions == //\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_FAILURE,\r\n\r\n  // == Login Actions == //\r\n  LOGIN_SUCCESS,\r\n\r\n  // == Logout Action == //\r\n  LOGOUT\r\n\r\n} from '../actions/userActions';\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case POST_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case DELETE_INITIALIZE:\r\n      return {\r\n        ...state,\r\n        isDeleting: true,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    case FETCH_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    case FETCH_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isFetching: false,\r\n        error: \"\"\r\n      };\r\n\r\n    case FETCH_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n\r\n    case ADD_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isSubmitting: false,\r\n        user: {\r\n          user_id: action.payload.id[0],\r\n          username: action.payload.user.username,\r\n          password: action.payload.user.password,\r\n          first_name: action.payload.user.first_name,\r\n          last_name: action.payload.user.last_name,\r\n          email: action.payload.user.email,\r\n          phone_number:action.payload.user.phone_number\r\n        },\r\n        isLoggedIn:false\r\n      };\r\n\r\n    case ADD_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case EDIT_USER_SUCCESS: \r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isEditing: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case EDIT_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        isDeleting: false,\r\n        isSubmitting: true\r\n      };\r\n\r\n    case DELETE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isSubmitting: false\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isLoggedIn: true\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\n// Redux Dependencies\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { loadState } from './sessionStorage';\r\nimport thunk from 'redux-thunk';\r\n// import reducer from './reducers';\r\nimport createRootReducer from './reducers';\r\n\r\n// History Actions\r\nimport { createHashHistory } from 'history';\r\nimport { ConnectedRouter, routerMiddleware } from 'connected-react-router';\r\n\r\n// React MDL\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\n\r\n// Redux Store\r\nconst persistedState = loadState();\r\nconst composeEnhancers = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE || compose;\r\n\r\n// const store = createStore(\r\n//   reducer,\r\n//   persistedState,\r\n//   composeEnhancers(applyMiddleware(thunk))\r\n// );\r\n\r\n// Hash History\r\nconst history = createHashHistory({\r\n  hashType: 'slash',\r\n  getUserConfirmation: (message, callback) => \r\n  callback(window.confirm(message))\r\n});\r\n\r\nfunction store(preloadedState) {\r\n  const myStore = createStore(\r\n    createRootReducer(history),\r\n    preloadedState,\r\n    compose(\r\n      applyMiddleware(\r\n        routerMiddleware(history),\r\n        composeEnhancers(applyMiddleware(thunk)),\r\n        // persistedState\r\n      )\r\n    )\r\n  )\r\n  return myStore;\r\n}\r\n\r\nReactDOM.render(\r\n  // <BrowserRouter>\r\n  //   <Provider store={store}>\r\n  //     <App />\r\n  //   </Provider>\r\n  // </BrowserRouter>,\r\n  // document.getElementById('root')\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <App>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => (<div>Match</div>)} />\r\n          <Route render={() => (<div>Miss</div>)} />\r\n        </Switch>\r\n      </App>\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('react-root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = sessionStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};","import reactProjectReducer from './reactProjectReducers';\r\nimport reduxProjectReducer from './reduxProjectReducers';\r\nimport sqliteProjectReducer from './sqliteProjectReducers';\r\nimport postgresqlProjectReducer from './postgresqlProjectReducers';\r\nimport pythonProjectReducer from './pythonProjectReducers';\r\nimport userReducer from './userReducers';\r\n// import { reduceReducers } from 'redux-loop';\r\nimport { combineReducers } from 'redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\n// const reducer = reduceReducers(\r\n//   reactProjectReducer,\r\n//   reduxProjectReducer,\r\n//   sqliteProjectReducer,\r\n//   postgresqlProjectReducer,\r\n//   pythonProjectReducer,\r\n//   userReducer\r\n// );\r\nexport default (history) => combineReducers({\r\n  router: ConnectedRouter(history),\r\n  reactProjectReducer,\r\n  reduxProjectReducer,\r\n  sqliteProjectReducer,\r\n  postgresqlProjectReducer,\r\n  pythonProjectReducer,\r\n  userReducer\r\n})\r\n\r\n// export default reducer;","module.exports = __webpack_public_path__ + \"static/media/profile_pic.3ab3f4f7.jpg\";"],"sourceRoot":""}